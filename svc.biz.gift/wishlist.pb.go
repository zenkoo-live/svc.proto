// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: svc.biz.gift/wishlist.proto

package gift

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 空请求类型
type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{0}
}

// 空响应类型
type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{1}
}

type EnabledStatusInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Enabled       bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"` // 是否启用心愿单
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnabledStatusInfo) Reset() {
	*x = EnabledStatusInfo{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnabledStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnabledStatusInfo) ProtoMessage() {}

func (x *EnabledStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnabledStatusInfo.ProtoReflect.Descriptor instead.
func (*EnabledStatusInfo) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{2}
}

func (x *EnabledStatusInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *EnabledStatusInfo) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateGiftsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // 房间ID
	Detail        []*WishGiftInfoField   `protobuf:"bytes,2,rep,name=detail,proto3" json:"detail,omitempty"`               // 礼物详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGiftsReq) Reset() {
	*x = UpdateGiftsReq{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGiftsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGiftsReq) ProtoMessage() {}

func (x *UpdateGiftsReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGiftsReq.ProtoReflect.Descriptor instead.
func (*UpdateGiftsReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateGiftsReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateGiftsReq) GetDetail() []*WishGiftInfoField {
	if x != nil {
		return x.Detail
	}
	return nil
}

type UpdateDetailGiftItemsResp struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RoomId           string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                               // 房间ID
	GiftId           string                 `protobuf:"bytes,2,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`                               // 礼物ID
	ReceivedQuantity string                 `protobuf:"bytes,3,opt,name=received_quantity,json=receivedQuantity,proto3" json:"received_quantity,omitempty"` // 收到的数量
	TargetQuantity   string                 `protobuf:"bytes,4,opt,name=target_quantity,json=targetQuantity,proto3" json:"target_quantity,omitempty"`       // 目标数
	IsCompleted      bool                   `protobuf:"varint,5,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`               // 是否已完成当前礼物目标
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateDetailGiftItemsResp) Reset() {
	*x = UpdateDetailGiftItemsResp{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDetailGiftItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDetailGiftItemsResp) ProtoMessage() {}

func (x *UpdateDetailGiftItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDetailGiftItemsResp.ProtoReflect.Descriptor instead.
func (*UpdateDetailGiftItemsResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDetailGiftItemsResp) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateDetailGiftItemsResp) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

func (x *UpdateDetailGiftItemsResp) GetReceivedQuantity() string {
	if x != nil {
		return x.ReceivedQuantity
	}
	return ""
}

func (x *UpdateDetailGiftItemsResp) GetTargetQuantity() string {
	if x != nil {
		return x.TargetQuantity
	}
	return ""
}

func (x *UpdateDetailGiftItemsResp) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

type SetWishlistResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWishlistResp) Reset() {
	*x = SetWishlistResp{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWishlistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWishlistResp) ProtoMessage() {}

func (x *SetWishlistResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWishlistResp.ProtoReflect.Descriptor instead.
func (*SetWishlistResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{5}
}

func (x *SetWishlistResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 公用删除反回
type LiveWishlistCommonDeleteResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AffectRows    int64                  `protobuf:"varint,1,opt,name=affect_rows,json=affectRows,proto3" json:"affect_rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiveWishlistCommonDeleteResp) Reset() {
	*x = LiveWishlistCommonDeleteResp{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveWishlistCommonDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveWishlistCommonDeleteResp) ProtoMessage() {}

func (x *LiveWishlistCommonDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveWishlistCommonDeleteResp.ProtoReflect.Descriptor instead.
func (*LiveWishlistCommonDeleteResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{6}
}

func (x *LiveWishlistCommonDeleteResp) GetAffectRows() int64 {
	if x != nil {
		return x.AffectRows
	}
	return 0
}

type LiveWishlistDetailAddReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RoomId         string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                          // 房间号
	GiftId         string                 `protobuf:"bytes,2,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`                          // 礼物ID
	TargetQuantity int32                  `protobuf:"varint,3,opt,name=target_quantity,json=targetQuantity,proto3" json:"target_quantity,omitempty"` // 目标数量
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LiveWishlistDetailAddReq) Reset() {
	*x = LiveWishlistDetailAddReq{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveWishlistDetailAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveWishlistDetailAddReq) ProtoMessage() {}

func (x *LiveWishlistDetailAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveWishlistDetailAddReq.ProtoReflect.Descriptor instead.
func (*LiveWishlistDetailAddReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{7}
}

func (x *LiveWishlistDetailAddReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *LiveWishlistDetailAddReq) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

func (x *LiveWishlistDetailAddReq) GetTargetQuantity() int32 {
	if x != nil {
		return x.TargetQuantity
	}
	return 0
}

type WishGiftInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WishlistId       string                 `protobuf:"bytes,2,opt,name=wishlist_id,json=wishlistId,proto3" json:"wishlist_id,omitempty"`                    // 心愿单ID
	GiftId           string                 `protobuf:"bytes,3,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`                                // 礼物ID
	GiftName         string                 `protobuf:"bytes,4,opt,name=gift_name,json=giftName,proto3" json:"gift_name,omitempty"`                          // 礼物名称
	GiftIcon         string                 `protobuf:"bytes,5,opt,name=gift_icon,json=giftIcon,proto3" json:"gift_icon,omitempty"`                          // 礼物图标
	GiftPrice        int32                  `protobuf:"varint,6,opt,name=gift_price,json=giftPrice,proto3" json:"gift_price,omitempty"`                      // 礼物价格
	GiftTotalPrice   int32                  `protobuf:"varint,7,opt,name=gift_total_price,json=giftTotalPrice,proto3" json:"gift_total_price,omitempty"`     // 礼物总价格
	TargetQuantity   int32                  `protobuf:"varint,8,opt,name=target_quantity,json=targetQuantity,proto3" json:"target_quantity,omitempty"`       // 目标数量
	ReceivedQuantity int32                  `protobuf:"varint,9,opt,name=received_quantity,json=receivedQuantity,proto3" json:"received_quantity,omitempty"` // 完成数量
	IsCompleted      bool                   `protobuf:"varint,10,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`               // 是否已完成当前心愿
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WishGiftInfo) Reset() {
	*x = WishGiftInfo{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WishGiftInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishGiftInfo) ProtoMessage() {}

func (x *WishGiftInfo) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishGiftInfo.ProtoReflect.Descriptor instead.
func (*WishGiftInfo) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{8}
}

func (x *WishGiftInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WishGiftInfo) GetWishlistId() string {
	if x != nil {
		return x.WishlistId
	}
	return ""
}

func (x *WishGiftInfo) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

func (x *WishGiftInfo) GetGiftName() string {
	if x != nil {
		return x.GiftName
	}
	return ""
}

func (x *WishGiftInfo) GetGiftIcon() string {
	if x != nil {
		return x.GiftIcon
	}
	return ""
}

func (x *WishGiftInfo) GetGiftPrice() int32 {
	if x != nil {
		return x.GiftPrice
	}
	return 0
}

func (x *WishGiftInfo) GetGiftTotalPrice() int32 {
	if x != nil {
		return x.GiftTotalPrice
	}
	return 0
}

func (x *WishGiftInfo) GetTargetQuantity() int32 {
	if x != nil {
		return x.TargetQuantity
	}
	return 0
}

func (x *WishGiftInfo) GetReceivedQuantity() int32 {
	if x != nil {
		return x.ReceivedQuantity
	}
	return 0
}

func (x *WishGiftInfo) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

// 心愿单信息
type WishlistInfoResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StreamerId    string                 `protobuf:"bytes,3,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`     // 主播ID
	RoomId        string                 `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                 // 房间ID
	LiveId        string                 `protobuf:"bytes,2,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`                 // 直播ID
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                   // 心愿单名称
	Desc          string                 `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                                   // 心愿单描述
	IsActive      bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`          // 是否为激活的心愿单
	IsAutomode    bool                   `protobuf:"varint,8,opt,name=is_automode,json=isAutomode,proto3" json:"is_automode,omitempty"`    // 是否为自动重置(每天0点自动重置心愿单数据)
	IsCompleted   bool                   `protobuf:"varint,9,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"` // 是否已完成
	Detail        []*WishGiftInfo        `protobuf:"bytes,10,rep,name=detail,proto3" json:"detail,omitempty"`                              // 心愿单礼物列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WishlistInfoResp) Reset() {
	*x = WishlistInfoResp{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WishlistInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishlistInfoResp) ProtoMessage() {}

func (x *WishlistInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishlistInfoResp.ProtoReflect.Descriptor instead.
func (*WishlistInfoResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{9}
}

func (x *WishlistInfoResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WishlistInfoResp) GetStreamerId() string {
	if x != nil {
		return x.StreamerId
	}
	return ""
}

func (x *WishlistInfoResp) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *WishlistInfoResp) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

func (x *WishlistInfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WishlistInfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *WishlistInfoResp) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *WishlistInfoResp) GetIsAutomode() bool {
	if x != nil {
		return x.IsAutomode
	}
	return false
}

func (x *WishlistInfoResp) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *WishlistInfoResp) GetDetail() []*WishGiftInfo {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 心愿单详情(创建时参数)
type WishGiftInfoField struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GiftId         string                 `protobuf:"bytes,1,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`                          // 礼物ID
	TargetQuantity int32                  `protobuf:"varint,2,opt,name=target_quantity,json=targetQuantity,proto3" json:"target_quantity,omitempty"` // 目标数量
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WishGiftInfoField) Reset() {
	*x = WishGiftInfoField{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WishGiftInfoField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishGiftInfoField) ProtoMessage() {}

func (x *WishGiftInfoField) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishGiftInfoField.ProtoReflect.Descriptor instead.
func (*WishGiftInfoField) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{10}
}

func (x *WishGiftInfoField) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

func (x *WishGiftInfoField) GetTargetQuantity() int32 {
	if x != nil {
		return x.TargetQuantity
	}
	return 0
}

type SetWishlistReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`              // 房间ID
	IsAutomode    bool                   `protobuf:"varint,2,opt,name=is_automode,json=isAutomode,proto3" json:"is_automode,omitempty"` // 是否为自动重置(每天0点自动重置心愿单数据)
	Enabled       bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`                         // 是否启用心愿单
	Detail        []*WishGiftInfoField   `protobuf:"bytes,4,rep,name=detail,proto3" json:"detail,omitempty"`                            // 心愿单礼物配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWishlistReq) Reset() {
	*x = SetWishlistReq{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWishlistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWishlistReq) ProtoMessage() {}

func (x *SetWishlistReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWishlistReq.ProtoReflect.Descriptor instead.
func (*SetWishlistReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{11}
}

func (x *SetWishlistReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SetWishlistReq) GetIsAutomode() bool {
	if x != nil {
		return x.IsAutomode
	}
	return false
}

func (x *SetWishlistReq) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SetWishlistReq) GetDetail() []*WishGiftInfoField {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetWishlistByRoomIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWishlistByRoomIdReq) Reset() {
	*x = GetWishlistByRoomIdReq{}
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWishlistByRoomIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWishlistByRoomIdReq) ProtoMessage() {}

func (x *GetWishlistByRoomIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_gift_wishlist_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWishlistByRoomIdReq.ProtoReflect.Descriptor instead.
func (*GetWishlistByRoomIdReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_gift_wishlist_proto_rawDescGZIP(), []int{12}
}

func (x *GetWishlistByRoomIdReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

var File_svc_biz_gift_wishlist_proto protoreflect.FileDescriptor

var file_svc_biz_gift_wishlist_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2f, 0x77,
	0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73,
	0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x11,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x62, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x69,
	0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x57,
	0x69, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xc6, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x22, 0x21, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x1c, 0x4c, 0x69, 0x76, 0x65, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x75, 0x0a, 0x18, 0x4c, 0x69, 0x76, 0x65, 0x57, 0x69, 0x73,
	0x68, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x66,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xd4, 0x02, 0x0a,
	0x0c, 0x57, 0x69, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x69, 0x66, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x10, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67,
	0x69, 0x66, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x55, 0x0a, 0x11, 0x57, 0x69, 0x73, 0x68,
	0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x9d, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a,
	0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0x31, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x32, 0x85, 0x04, 0x0a, 0x0c, 0x4c, 0x69, 0x76, 0x65, 0x57, 0x69, 0x73, 0x68, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x24, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a,
	0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62,
	0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x45,
	0x78, 0x65, 0x63, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x1a, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f,
	0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x67, 0x69, 0x66, 0x74, 0x3b, 0x67, 0x69, 0x66,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_svc_biz_gift_wishlist_proto_rawDescOnce sync.Once
	file_svc_biz_gift_wishlist_proto_rawDescData []byte
)

func file_svc_biz_gift_wishlist_proto_rawDescGZIP() []byte {
	file_svc_biz_gift_wishlist_proto_rawDescOnce.Do(func() {
		file_svc_biz_gift_wishlist_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_biz_gift_wishlist_proto_rawDesc), len(file_svc_biz_gift_wishlist_proto_rawDesc)))
	})
	return file_svc_biz_gift_wishlist_proto_rawDescData
}

var file_svc_biz_gift_wishlist_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_svc_biz_gift_wishlist_proto_goTypes = []any{
	(*EmptyRequest)(nil),                 // 0: svc.biz.gift.EmptyRequest
	(*EmptyResponse)(nil),                // 1: svc.biz.gift.EmptyResponse
	(*EnabledStatusInfo)(nil),            // 2: svc.biz.gift.EnabledStatusInfo
	(*UpdateGiftsReq)(nil),               // 3: svc.biz.gift.UpdateGiftsReq
	(*UpdateDetailGiftItemsResp)(nil),    // 4: svc.biz.gift.UpdateDetailGiftItemsResp
	(*SetWishlistResp)(nil),              // 5: svc.biz.gift.SetWishlistResp
	(*LiveWishlistCommonDeleteResp)(nil), // 6: svc.biz.gift.LiveWishlistCommonDeleteResp
	(*LiveWishlistDetailAddReq)(nil),     // 7: svc.biz.gift.LiveWishlistDetailAddReq
	(*WishGiftInfo)(nil),                 // 8: svc.biz.gift.WishGiftInfo
	(*WishlistInfoResp)(nil),             // 9: svc.biz.gift.WishlistInfoResp
	(*WishGiftInfoField)(nil),            // 10: svc.biz.gift.WishGiftInfoField
	(*SetWishlistReq)(nil),               // 11: svc.biz.gift.SetWishlistReq
	(*GetWishlistByRoomIdReq)(nil),       // 12: svc.biz.gift.GetWishlistByRoomIdReq
}
var file_svc_biz_gift_wishlist_proto_depIdxs = []int32{
	10, // 0: svc.biz.gift.UpdateGiftsReq.detail:type_name -> svc.biz.gift.WishGiftInfoField
	8,  // 1: svc.biz.gift.WishlistInfoResp.detail:type_name -> svc.biz.gift.WishGiftInfo
	10, // 2: svc.biz.gift.SetWishlistReq.detail:type_name -> svc.biz.gift.WishGiftInfoField
	11, // 3: svc.biz.gift.LiveWishlist.SetWishlist:input_type -> svc.biz.gift.SetWishlistReq
	12, // 4: svc.biz.gift.LiveWishlist.GetByRoomId:input_type -> svc.biz.gift.GetWishlistByRoomIdReq
	3,  // 5: svc.biz.gift.LiveWishlist.UpdateWishGifts:input_type -> svc.biz.gift.UpdateGiftsReq
	2,  // 6: svc.biz.gift.LiveWishlist.SetActiveStatus:input_type -> svc.biz.gift.EnabledStatusInfo
	2,  // 7: svc.biz.gift.LiveWishlist.SetAutomodeStatus:input_type -> svc.biz.gift.EnabledStatusInfo
	0,  // 8: svc.biz.gift.LiveWishlist.ExecAutoModeTask:input_type -> svc.biz.gift.EmptyRequest
	5,  // 9: svc.biz.gift.LiveWishlist.SetWishlist:output_type -> svc.biz.gift.SetWishlistResp
	9,  // 10: svc.biz.gift.LiveWishlist.GetByRoomId:output_type -> svc.biz.gift.WishlistInfoResp
	9,  // 11: svc.biz.gift.LiveWishlist.UpdateWishGifts:output_type -> svc.biz.gift.WishlistInfoResp
	2,  // 12: svc.biz.gift.LiveWishlist.SetActiveStatus:output_type -> svc.biz.gift.EnabledStatusInfo
	2,  // 13: svc.biz.gift.LiveWishlist.SetAutomodeStatus:output_type -> svc.biz.gift.EnabledStatusInfo
	1,  // 14: svc.biz.gift.LiveWishlist.ExecAutoModeTask:output_type -> svc.biz.gift.EmptyResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_svc_biz_gift_wishlist_proto_init() }
func file_svc_biz_gift_wishlist_proto_init() {
	if File_svc_biz_gift_wishlist_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_biz_gift_wishlist_proto_rawDesc), len(file_svc_biz_gift_wishlist_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_biz_gift_wishlist_proto_goTypes,
		DependencyIndexes: file_svc_biz_gift_wishlist_proto_depIdxs,
		MessageInfos:      file_svc_biz_gift_wishlist_proto_msgTypes,
	}.Build()
	File_svc_biz_gift_wishlist_proto = out.File
	file_svc_biz_gift_wishlist_proto_goTypes = nil
	file_svc_biz_gift_wishlist_proto_depIdxs = nil
}
