// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: svc.biz.room/live.proto

package room

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LiveDisplayType int32

const (
	LiveDisplayType_LiveDisplayTypeUnknown    LiveDisplayType = 0 // 未知
	LiveDisplayType_LiveDisplayTypeHorizontal LiveDisplayType = 1 // 横屏
	LiveDisplayType_LiveDisplayTypeVertical   LiveDisplayType = 2 // 竖屏
)

// Enum value maps for LiveDisplayType.
var (
	LiveDisplayType_name = map[int32]string{
		0: "LiveDisplayTypeUnknown",
		1: "LiveDisplayTypeHorizontal",
		2: "LiveDisplayTypeVertical",
	}
	LiveDisplayType_value = map[string]int32{
		"LiveDisplayTypeUnknown":    0,
		"LiveDisplayTypeHorizontal": 1,
		"LiveDisplayTypeVertical":   2,
	}
)

func (x LiveDisplayType) Enum() *LiveDisplayType {
	p := new(LiveDisplayType)
	*p = x
	return p
}

func (x LiveDisplayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LiveDisplayType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_biz_room_live_proto_enumTypes[0].Descriptor()
}

func (LiveDisplayType) Type() protoreflect.EnumType {
	return &file_svc_biz_room_live_proto_enumTypes[0]
}

func (x LiveDisplayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LiveDisplayType.Descriptor instead.
func (LiveDisplayType) EnumDescriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{0}
}

type LiveStatus int32

const (
	LiveStatus_LiveStatusUnknown LiveStatus = 0 // 未知
	LiveStatus_LiveStatusOnline  LiveStatus = 1 // 上线
	LiveStatus_LiveStatusOffline LiveStatus = 2 // 下线
)

// Enum value maps for LiveStatus.
var (
	LiveStatus_name = map[int32]string{
		0: "LiveStatusUnknown",
		1: "LiveStatusOnline",
		2: "LiveStatusOffline",
	}
	LiveStatus_value = map[string]int32{
		"LiveStatusUnknown": 0,
		"LiveStatusOnline":  1,
		"LiveStatusOffline": 2,
	}
)

func (x LiveStatus) Enum() *LiveStatus {
	p := new(LiveStatus)
	*p = x
	return p
}

func (x LiveStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LiveStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_biz_room_live_proto_enumTypes[1].Descriptor()
}

func (LiveStatus) Type() protoreflect.EnumType {
	return &file_svc_biz_room_live_proto_enumTypes[1]
}

func (x LiveStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LiveStatus.Descriptor instead.
func (LiveStatus) EnumDescriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{1}
}

type StartLiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamerId  string          `protobuf:"bytes,1,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`                                       // 主播id
	DisplayType LiveDisplayType `protobuf:"varint,2,opt,name=display_type,json=displayType,proto3,enum=svc.biz.room.LiveDisplayType" json:"display_type,omitempty"` // 横竖屏类型
}

func (x *StartLiveReq) Reset() {
	*x = StartLiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLiveReq) ProtoMessage() {}

func (x *StartLiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLiveReq.ProtoReflect.Descriptor instead.
func (*StartLiveReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{0}
}

func (x *StartLiveReq) GetStreamerId() string {
	if x != nil {
		return x.StreamerId
	}
	return ""
}

func (x *StartLiveReq) GetDisplayType() LiveDisplayType {
	if x != nil {
		return x.DisplayType
	}
	return LiveDisplayType_LiveDisplayTypeUnknown
}

type StartLiveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveId string `protobuf:"bytes,1,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"` // 直播id
}

func (x *StartLiveResp) Reset() {
	*x = StartLiveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLiveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLiveResp) ProtoMessage() {}

func (x *StartLiveResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLiveResp.ProtoReflect.Descriptor instead.
func (*StartLiveResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{1}
}

func (x *StartLiveResp) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

type StopLiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamerId string `protobuf:"bytes,1,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"` // 主播id
}

func (x *StopLiveReq) Reset() {
	*x = StopLiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopLiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopLiveReq) ProtoMessage() {}

func (x *StopLiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopLiveReq.ProtoReflect.Descriptor instead.
func (*StopLiveReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{2}
}

func (x *StopLiveReq) GetStreamerId() string {
	if x != nil {
		return x.StreamerId
	}
	return ""
}

type StopLiveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopLiveResp) Reset() {
	*x = StopLiveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopLiveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopLiveResp) ProtoMessage() {}

func (x *StopLiveResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopLiveResp.ProtoReflect.Descriptor instead.
func (*StopLiveResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{3}
}

type UpdateLiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveId     string                 `protobuf:"bytes,1,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"` // 直播id
	Live       *LiveInfo              `protobuf:"bytes,2,opt,name=live,proto3" json:"live,omitempty"`                   // 直播信息
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateLiveReq) Reset() {
	*x = UpdateLiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiveReq) ProtoMessage() {}

func (x *UpdateLiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiveReq.ProtoReflect.Descriptor instead.
func (*UpdateLiveReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLiveReq) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

func (x *UpdateLiveReq) GetLive() *LiveInfo {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *UpdateLiveReq) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type GetLiveInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveId string `protobuf:"bytes,1,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"` // 直播id
}

func (x *GetLiveInfoReq) Reset() {
	*x = GetLiveInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveInfoReq) ProtoMessage() {}

func (x *GetLiveInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveInfoReq.ProtoReflect.Descriptor instead.
func (*GetLiveInfoReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{5}
}

func (x *GetLiveInfoReq) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

type GetLiveInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Live *LiveInfo `protobuf:"bytes,1,opt,name=live,proto3" json:"live,omitempty"` // 直播信息
}

func (x *GetLiveInfoResp) Reset() {
	*x = GetLiveInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveInfoResp) ProtoMessage() {}

func (x *GetLiveInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveInfoResp.ProtoReflect.Descriptor instead.
func (*GetLiveInfoResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{6}
}

func (x *GetLiveInfoResp) GetLive() *LiveInfo {
	if x != nil {
		return x.Live
	}
	return nil
}

type MGetLiveInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveIds []string `protobuf:"bytes,1,rep,name=live_ids,json=liveIds,proto3" json:"live_ids,omitempty"` // 直播id列表
}

func (x *MGetLiveInfoReq) Reset() {
	*x = MGetLiveInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGetLiveInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGetLiveInfoReq) ProtoMessage() {}

func (x *MGetLiveInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGetLiveInfoReq.ProtoReflect.Descriptor instead.
func (*MGetLiveInfoReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{7}
}

func (x *MGetLiveInfoReq) GetLiveIds() []string {
	if x != nil {
		return x.LiveIds
	}
	return nil
}

type MGetLiveInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[string]*LiveInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 直播信息
}

func (x *MGetLiveInfoResp) Reset() {
	*x = MGetLiveInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGetLiveInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGetLiveInfoResp) ProtoMessage() {}

func (x *MGetLiveInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGetLiveInfoResp.ProtoReflect.Descriptor instead.
func (*MGetLiveInfoResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{8}
}

func (x *MGetLiveInfoResp) GetItems() map[string]*LiveInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type OnlineLiveListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                              // 页数
	Limit      int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                            // 条数
	CategoryId string `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // 分类id
}

func (x *OnlineLiveListReq) Reset() {
	*x = OnlineLiveListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineLiveListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineLiveListReq) ProtoMessage() {}

func (x *OnlineLiveListReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineLiveListReq.ProtoReflect.Descriptor instead.
func (*OnlineLiveListReq) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{9}
}

func (x *OnlineLiveListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OnlineLiveListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OnlineLiveListReq) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

type OnlineLiveListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LiveInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 直播信息
}

func (x *OnlineLiveListResp) Reset() {
	*x = OnlineLiveListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineLiveListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineLiveListResp) ProtoMessage() {}

func (x *OnlineLiveListResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineLiveListResp.ProtoReflect.Descriptor instead.
func (*OnlineLiveListResp) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{10}
}

func (x *OnlineLiveListResp) GetItems() []*LiveInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type LiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                         // id
	StreamerId     string                 `protobuf:"bytes,2,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`                                       // 主播id
	CategoryId     string                 `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`                                       // 分类id
	Status         LiveStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=svc.biz.room.LiveStatus" json:"status,omitempty"`                                   // 状态：1表示开播，2表示关播
	DisplayType    LiveDisplayType        `protobuf:"varint,5,opt,name=display_type,json=displayType,proto3,enum=svc.biz.room.LiveDisplayType" json:"display_type,omitempty"` // 横竖屏类型
	StartAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                                                // 开播时间
	EndAt          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`                                                      // 结束时间
	ScoreRecommend int32                  `protobuf:"varint,101,opt,name=score_recommend,json=scoreRecommend,proto3" json:"score_recommend,omitempty"`                        // 推荐分数
	ScoreSearch    int32                  `protobuf:"varint,102,opt,name=score_search,json=scoreSearch,proto3" json:"score_search,omitempty"`                                 // 搜索分数
	ScoreSubscribe int32                  `protobuf:"varint,103,opt,name=score_subscribe,json=scoreSubscribe,proto3" json:"score_subscribe,omitempty"`                        // 关注分数
	ScoreHot       int32                  `protobuf:"varint,104,opt,name=score_hot,json=scoreHot,proto3" json:"score_hot,omitempty"`                                          // 热度分数
	ScoreGlamour   int32                  `protobuf:"varint,105,opt,name=score_glamour,json=scoreGlamour,proto3" json:"score_glamour,omitempty"`                              // 魅力分数
	ScoreOnline    int32                  `protobuf:"varint,106,opt,name=score_online,json=scoreOnline,proto3" json:"score_online,omitempty"`                                 // 在线人数
	ScoreGift      int32                  `protobuf:"varint,107,opt,name=score_gift,json=scoreGift,proto3" json:"score_gift,omitempty"`                                       // 礼物分数
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,255,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                        // 创建时间
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,256,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                        // 更新时间
}

func (x *LiveInfo) Reset() {
	*x = LiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_biz_room_live_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveInfo) ProtoMessage() {}

func (x *LiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_svc_biz_room_live_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveInfo.ProtoReflect.Descriptor instead.
func (*LiveInfo) Descriptor() ([]byte, []int) {
	return file_svc_biz_room_live_proto_rawDescGZIP(), []int{11}
}

func (x *LiveInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LiveInfo) GetStreamerId() string {
	if x != nil {
		return x.StreamerId
	}
	return ""
}

func (x *LiveInfo) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *LiveInfo) GetStatus() LiveStatus {
	if x != nil {
		return x.Status
	}
	return LiveStatus_LiveStatusUnknown
}

func (x *LiveInfo) GetDisplayType() LiveDisplayType {
	if x != nil {
		return x.DisplayType
	}
	return LiveDisplayType_LiveDisplayTypeUnknown
}

func (x *LiveInfo) GetStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *LiveInfo) GetEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

func (x *LiveInfo) GetScoreRecommend() int32 {
	if x != nil {
		return x.ScoreRecommend
	}
	return 0
}

func (x *LiveInfo) GetScoreSearch() int32 {
	if x != nil {
		return x.ScoreSearch
	}
	return 0
}

func (x *LiveInfo) GetScoreSubscribe() int32 {
	if x != nil {
		return x.ScoreSubscribe
	}
	return 0
}

func (x *LiveInfo) GetScoreHot() int32 {
	if x != nil {
		return x.ScoreHot
	}
	return 0
}

func (x *LiveInfo) GetScoreGlamour() int32 {
	if x != nil {
		return x.ScoreGlamour
	}
	return 0
}

func (x *LiveInfo) GetScoreOnline() int32 {
	if x != nil {
		return x.ScoreOnline
	}
	return 0
}

func (x *LiveInfo) GetScoreGift() int32 {
	if x != nil {
		return x.ScoreGift
	}
	return 0
}

func (x *LiveInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LiveInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_svc_biz_room_live_proto protoreflect.FileDescriptor

var file_svc_biz_room_live_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x76, 0x63, 0x2e, 0x62,
	0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69,
	0x76, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x76,
	0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x76, 0x65, 0x22, 0x2c, 0x0a, 0x0f, 0x4d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64, 0x73,
	0x22, 0xa5, 0x01, 0x0a, 0x10, 0x4d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x50, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a, 0x11, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xab, 0x05, 0x0a,
	0x08, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x68, 0x6f, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x67, 0x6c, 0x61, 0x6d, 0x6f, 0x75, 0x72, 0x18, 0x69, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x6f, 0x75, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x67, 0x69, 0x66,
	0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x47, 0x69,
	0x66, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3a,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x80, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x69, 0x0a, 0x0f, 0x4c, 0x69,
	0x76, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x4c, 0x69, 0x76, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x69, 0x76,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x6f, 0x72, 0x69,
	0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x69, 0x76, 0x65,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x10, 0x02, 0x2a, 0x50, 0x0a, 0x0a, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x32, 0xc2, 0x03, 0x0a, 0x04, 0x4c, 0x69, 0x76, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x69,
	0x76, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0c, 0x4d, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62,
	0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69,
	0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x4c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x15, 0x5a, 0x13,
	0x2e, 0x2f, 0x73, 0x76, 0x63, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x3b, 0x72,
	0x6f, 0x6f, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_biz_room_live_proto_rawDescOnce sync.Once
	file_svc_biz_room_live_proto_rawDescData = file_svc_biz_room_live_proto_rawDesc
)

func file_svc_biz_room_live_proto_rawDescGZIP() []byte {
	file_svc_biz_room_live_proto_rawDescOnce.Do(func() {
		file_svc_biz_room_live_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_biz_room_live_proto_rawDescData)
	})
	return file_svc_biz_room_live_proto_rawDescData
}

var file_svc_biz_room_live_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_svc_biz_room_live_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_svc_biz_room_live_proto_goTypes = []interface{}{
	(LiveDisplayType)(0),          // 0: svc.biz.room.LiveDisplayType
	(LiveStatus)(0),               // 1: svc.biz.room.LiveStatus
	(*StartLiveReq)(nil),          // 2: svc.biz.room.StartLiveReq
	(*StartLiveResp)(nil),         // 3: svc.biz.room.StartLiveResp
	(*StopLiveReq)(nil),           // 4: svc.biz.room.StopLiveReq
	(*StopLiveResp)(nil),          // 5: svc.biz.room.StopLiveResp
	(*UpdateLiveReq)(nil),         // 6: svc.biz.room.UpdateLiveReq
	(*GetLiveInfoReq)(nil),        // 7: svc.biz.room.GetLiveInfoReq
	(*GetLiveInfoResp)(nil),       // 8: svc.biz.room.GetLiveInfoResp
	(*MGetLiveInfoReq)(nil),       // 9: svc.biz.room.MGetLiveInfoReq
	(*MGetLiveInfoResp)(nil),      // 10: svc.biz.room.MGetLiveInfoResp
	(*OnlineLiveListReq)(nil),     // 11: svc.biz.room.OnlineLiveListReq
	(*OnlineLiveListResp)(nil),    // 12: svc.biz.room.OnlineLiveListResp
	(*LiveInfo)(nil),              // 13: svc.biz.room.LiveInfo
	nil,                           // 14: svc.biz.room.MGetLiveInfoResp.ItemsEntry
	(*fieldmaskpb.FieldMask)(nil), // 15: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 17: google.protobuf.Empty
}
var file_svc_biz_room_live_proto_depIdxs = []int32{
	0,  // 0: svc.biz.room.StartLiveReq.display_type:type_name -> svc.biz.room.LiveDisplayType
	13, // 1: svc.biz.room.UpdateLiveReq.live:type_name -> svc.biz.room.LiveInfo
	15, // 2: svc.biz.room.UpdateLiveReq.update_mask:type_name -> google.protobuf.FieldMask
	13, // 3: svc.biz.room.GetLiveInfoResp.live:type_name -> svc.biz.room.LiveInfo
	14, // 4: svc.biz.room.MGetLiveInfoResp.items:type_name -> svc.biz.room.MGetLiveInfoResp.ItemsEntry
	13, // 5: svc.biz.room.OnlineLiveListResp.items:type_name -> svc.biz.room.LiveInfo
	1,  // 6: svc.biz.room.LiveInfo.status:type_name -> svc.biz.room.LiveStatus
	0,  // 7: svc.biz.room.LiveInfo.display_type:type_name -> svc.biz.room.LiveDisplayType
	16, // 8: svc.biz.room.LiveInfo.start_at:type_name -> google.protobuf.Timestamp
	16, // 9: svc.biz.room.LiveInfo.end_at:type_name -> google.protobuf.Timestamp
	16, // 10: svc.biz.room.LiveInfo.created_at:type_name -> google.protobuf.Timestamp
	16, // 11: svc.biz.room.LiveInfo.updated_at:type_name -> google.protobuf.Timestamp
	13, // 12: svc.biz.room.MGetLiveInfoResp.ItemsEntry.value:type_name -> svc.biz.room.LiveInfo
	2,  // 13: svc.biz.room.Live.StartLive:input_type -> svc.biz.room.StartLiveReq
	4,  // 14: svc.biz.room.Live.StopLive:input_type -> svc.biz.room.StopLiveReq
	6,  // 15: svc.biz.room.Live.UpdateLive:input_type -> svc.biz.room.UpdateLiveReq
	7,  // 16: svc.biz.room.Live.GetLiveInfo:input_type -> svc.biz.room.GetLiveInfoReq
	9,  // 17: svc.biz.room.Live.MGetLiveInfo:input_type -> svc.biz.room.MGetLiveInfoReq
	11, // 18: svc.biz.room.Live.OnlineLiveList:input_type -> svc.biz.room.OnlineLiveListReq
	3,  // 19: svc.biz.room.Live.StartLive:output_type -> svc.biz.room.StartLiveResp
	5,  // 20: svc.biz.room.Live.StopLive:output_type -> svc.biz.room.StopLiveResp
	17, // 21: svc.biz.room.Live.UpdateLive:output_type -> google.protobuf.Empty
	8,  // 22: svc.biz.room.Live.GetLiveInfo:output_type -> svc.biz.room.GetLiveInfoResp
	10, // 23: svc.biz.room.Live.MGetLiveInfo:output_type -> svc.biz.room.MGetLiveInfoResp
	12, // 24: svc.biz.room.Live.OnlineLiveList:output_type -> svc.biz.room.OnlineLiveListResp
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_svc_biz_room_live_proto_init() }
func file_svc_biz_room_live_proto_init() {
	if File_svc_biz_room_live_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_biz_room_live_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLiveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopLiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopLiveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGetLiveInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGetLiveInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineLiveListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineLiveListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_biz_room_live_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_biz_room_live_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_biz_room_live_proto_goTypes,
		DependencyIndexes: file_svc_biz_room_live_proto_depIdxs,
		EnumInfos:         file_svc_biz_room_live_proto_enumTypes,
		MessageInfos:      file_svc_biz_room_live_proto_msgTypes,
	}.Build()
	File_svc_biz_room_live_proto = out.File
	file_svc_biz_room_live_proto_rawDesc = nil
	file_svc_biz_room_live_proto_goTypes = nil
	file_svc_biz_room_live_proto_depIdxs = nil
}
