// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: svc.infra.link/stat.proto

package link

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OnlineDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // 账号ID
}

func (x *OnlineDetail) Reset() {
	*x = OnlineDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineDetail) ProtoMessage() {}

func (x *OnlineDetail) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineDetail.ProtoReflect.Descriptor instead.
func (*OnlineDetail) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{0}
}

func (x *OnlineDetail) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type OnlineDetailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*OnlineDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 列表
}

func (x *OnlineDetailList) Reset() {
	*x = OnlineDetailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineDetailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineDetailList) ProtoMessage() {}

func (x *OnlineDetailList) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineDetailList.ProtoReflect.Descriptor instead.
func (*OnlineDetailList) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{1}
}

func (x *OnlineDetailList) GetList() []*OnlineDetail {
	if x != nil {
		return x.List
	}
	return nil
}

type OnlineCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	GroupId    string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // 群组ID
}

func (x *OnlineCountRequest) Reset() {
	*x = OnlineCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineCountRequest) ProtoMessage() {}

func (x *OnlineCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineCountRequest.ProtoReflect.Descriptor instead.
func (*OnlineCountRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{2}
}

func (x *OnlineCountRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *OnlineCountRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type OnlineCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // 总数
}

func (x *OnlineCountResponse) Reset() {
	*x = OnlineCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineCountResponse) ProtoMessage() {}

func (x *OnlineCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineCountResponse.ProtoReflect.Descriptor instead.
func (*OnlineCountResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{3}
}

func (x *OnlineCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type OnlineListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	GroupId    string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // 群组ID
	Page       int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                              // 分页码
	Size       *int64 `protobuf:"varint,4,opt,name=size,proto3,oneof" json:"size,omitempty"`                        // 数量
}

func (x *OnlineListRequest) Reset() {
	*x = OnlineListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineListRequest) ProtoMessage() {}

func (x *OnlineListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineListRequest.ProtoReflect.Descriptor instead.
func (*OnlineListRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{4}
}

func (x *OnlineListRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *OnlineListRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *OnlineListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OnlineListRequest) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type OnlineSessionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online *OnlineDetailList `protobuf:"bytes,1,opt,name=online,proto3" json:"online,omitempty"` // 在线列表
}

func (x *OnlineSessionListResponse) Reset() {
	*x = OnlineSessionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineSessionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineSessionListResponse) ProtoMessage() {}

func (x *OnlineSessionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineSessionListResponse.ProtoReflect.Descriptor instead.
func (*OnlineSessionListResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{5}
}

func (x *OnlineSessionListResponse) GetOnline() *OnlineDetailList {
	if x != nil {
		return x.Online
	}
	return nil
}

type OnlineAccountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online *OnlineDetailList `protobuf:"bytes,1,opt,name=online,proto3" json:"online,omitempty"` // 在线列表
}

func (x *OnlineAccountListResponse) Reset() {
	*x = OnlineAccountListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineAccountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineAccountListResponse) ProtoMessage() {}

func (x *OnlineAccountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineAccountListResponse.ProtoReflect.Descriptor instead.
func (*OnlineAccountListResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{6}
}

func (x *OnlineAccountListResponse) GetOnline() *OnlineDetailList {
	if x != nil {
		return x.Online
	}
	return nil
}

type OnlineDeviceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online *OnlineDetailList `protobuf:"bytes,1,opt,name=online,proto3" json:"online,omitempty"` // 在线列表
}

func (x *OnlineDeviceListResponse) Reset() {
	*x = OnlineDeviceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineDeviceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineDeviceListResponse) ProtoMessage() {}

func (x *OnlineDeviceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineDeviceListResponse.ProtoReflect.Descriptor instead.
func (*OnlineDeviceListResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{7}
}

func (x *OnlineDeviceListResponse) GetOnline() *OnlineDetailList {
	if x != nil {
		return x.Online
	}
	return nil
}

type CheckSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	SessionIds []string `protobuf:"bytes,2,rep,name=session_ids,json=sessionIds,proto3" json:"session_ids,omitempty"` // 连接ID（列表）
}

func (x *CheckSessionRequest) Reset() {
	*x = CheckSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSessionRequest) ProtoMessage() {}

func (x *CheckSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSessionRequest.ProtoReflect.Descriptor instead.
func (*CheckSessionRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{8}
}

func (x *CheckSessionRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CheckSessionRequest) GetSessionIds() []string {
	if x != nil {
		return x.SessionIds
	}
	return nil
}

type CheckSessionRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	SessionIds []string `protobuf:"bytes,2,rep,name=session_ids,json=sessionIds,proto3" json:"session_ids,omitempty"` // 连接ID（列表）
	RoomId     string   `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`             // 房间ID
	LiveId     string   `protobuf:"bytes,4,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`             // 直播ID, 房间ID和直播ID 不能同时为空
}

func (x *CheckSessionRoomRequest) Reset() {
	*x = CheckSessionRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSessionRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSessionRoomRequest) ProtoMessage() {}

func (x *CheckSessionRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSessionRoomRequest.ProtoReflect.Descriptor instead.
func (*CheckSessionRoomRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{9}
}

func (x *CheckSessionRoomRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CheckSessionRoomRequest) GetSessionIds() []string {
	if x != nil {
		return x.SessionIds
	}
	return nil
}

func (x *CheckSessionRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CheckSessionRoomRequest) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

type CheckSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online map[string]bool `protobuf:"bytes,1,rep,name=online,proto3" json:"online,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 连接ID => 是否在线
}

func (x *CheckSessionResponse) Reset() {
	*x = CheckSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSessionResponse) ProtoMessage() {}

func (x *CheckSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSessionResponse.ProtoReflect.Descriptor instead.
func (*CheckSessionResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{10}
}

func (x *CheckSessionResponse) GetOnline() map[string]bool {
	if x != nil {
		return x.Online
	}
	return nil
}

type CheckAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	AccountIds []string `protobuf:"bytes,2,rep,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"` // 账号ID（列表）
}

func (x *CheckAccountRequest) Reset() {
	*x = CheckAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAccountRequest) ProtoMessage() {}

func (x *CheckAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAccountRequest.ProtoReflect.Descriptor instead.
func (*CheckAccountRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{11}
}

func (x *CheckAccountRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CheckAccountRequest) GetAccountIds() []string {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type CheckAccountRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	AccountIds []string `protobuf:"bytes,2,rep,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"` // 账号ID（列表）
	RoomId     string   `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`             // 房间ID
	LiveId     string   `protobuf:"bytes,4,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`             // 直播ID, 房间ID和直播ID 不能同时为空
}

func (x *CheckAccountRoomRequest) Reset() {
	*x = CheckAccountRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAccountRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAccountRoomRequest) ProtoMessage() {}

func (x *CheckAccountRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAccountRoomRequest.ProtoReflect.Descriptor instead.
func (*CheckAccountRoomRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{12}
}

func (x *CheckAccountRoomRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CheckAccountRoomRequest) GetAccountIds() []string {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

func (x *CheckAccountRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CheckAccountRoomRequest) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

type CheckAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online map[string]bool `protobuf:"bytes,1,rep,name=online,proto3" json:"online,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 账号ID => 是否在线
}

func (x *CheckAccountResponse) Reset() {
	*x = CheckAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAccountResponse) ProtoMessage() {}

func (x *CheckAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAccountResponse.ProtoReflect.Descriptor instead.
func (*CheckAccountResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{13}
}

func (x *CheckAccountResponse) GetOnline() map[string]bool {
	if x != nil {
		return x.Online
	}
	return nil
}

type CheckDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	Devices    []string `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`                         // 设备标识（列表）
}

func (x *CheckDeviceRequest) Reset() {
	*x = CheckDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeviceRequest) ProtoMessage() {}

func (x *CheckDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeviceRequest.ProtoReflect.Descriptor instead.
func (*CheckDeviceRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{14}
}

func (x *CheckDeviceRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CheckDeviceRequest) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

type CheckDeviceRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"` // 商户ID
	Devices    []string `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`                         // 设备标识（列表）
	RoomId     string   `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`             // 房间ID
	LiveId     string   `protobuf:"bytes,4,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`             // 直播ID, 房间ID和直播ID 不能同时为空
}

func (x *CheckDeviceRoomRequest) Reset() {
	*x = CheckDeviceRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDeviceRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeviceRoomRequest) ProtoMessage() {}

func (x *CheckDeviceRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeviceRoomRequest.ProtoReflect.Descriptor instead.
func (*CheckDeviceRoomRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{15}
}

func (x *CheckDeviceRoomRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CheckDeviceRoomRequest) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *CheckDeviceRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CheckDeviceRoomRequest) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

type RoomLiveStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string  `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`       // 房间ID, 目前只会保留前三次直播数据
	LiveId *string `protobuf:"bytes,2,opt,name=live_id,json=liveId,proto3,oneof" json:"live_id,omitempty"` // 开播ID, 如果为空将以直播间最后一次直播的数据.
}

func (x *RoomLiveStatRequest) Reset() {
	*x = RoomLiveStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomLiveStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomLiveStatRequest) ProtoMessage() {}

func (x *RoomLiveStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomLiveStatRequest.ProtoReflect.Descriptor instead.
func (*RoomLiveStatRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{16}
}

func (x *RoomLiveStatRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomLiveStatRequest) GetLiveId() string {
	if x != nil && x.LiveId != nil {
		return *x.LiveId
	}
	return ""
}

type RoomLiveStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uv        int64 `protobuf:"varint,1,opt,name=uv,proto3" json:"uv,omitempty"`                                // 总人次
	Pv        int64 `protobuf:"varint,2,opt,name=pv,proto3" json:"pv,omitempty"`                                // 累计观看数
	High      int64 `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`                            // 高峰人数
	RealCount int64 `protobuf:"varint,4,opt,name=real_count,json=realCount,proto3" json:"real_count,omitempty"` // 实时人数
}

func (x *RoomLiveStatResponse) Reset() {
	*x = RoomLiveStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomLiveStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomLiveStatResponse) ProtoMessage() {}

func (x *RoomLiveStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomLiveStatResponse.ProtoReflect.Descriptor instead.
func (*RoomLiveStatResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{17}
}

func (x *RoomLiveStatResponse) GetUv() int64 {
	if x != nil {
		return x.Uv
	}
	return 0
}

func (x *RoomLiveStatResponse) GetPv() int64 {
	if x != nil {
		return x.Pv
	}
	return 0
}

func (x *RoomLiveStatResponse) GetHigh() int64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *RoomLiveStatResponse) GetRealCount() int64 {
	if x != nil {
		return x.RealCount
	}
	return 0
}

type CheckDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online map[string]bool `protobuf:"bytes,1,rep,name=online,proto3" json:"online,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 设备标识 => 是否在线
}

func (x *CheckDeviceResponse) Reset() {
	*x = CheckDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeviceResponse) ProtoMessage() {}

func (x *CheckDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeviceResponse.ProtoReflect.Descriptor instead.
func (*CheckDeviceResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{18}
}

func (x *CheckDeviceResponse) GetOnline() map[string]bool {
	if x != nil {
		return x.Online
	}
	return nil
}

type RefreshStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshStatRequest) Reset() {
	*x = RefreshStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshStatRequest) ProtoMessage() {}

func (x *RefreshStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshStatRequest.ProtoReflect.Descriptor instead.
func (*RefreshStatRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{19}
}

type RefreshStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"` // 是否刷新成功
}

func (x *RefreshStatResponse) Reset() {
	*x = RefreshStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_stat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshStatResponse) ProtoMessage() {}

func (x *RefreshStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_stat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshStatResponse.ProtoReflect.Descriptor instead.
func (*RefreshStatResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_stat_proto_rawDescGZIP(), []int{20}
}

func (x *RefreshStatResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_svc_infra_link_stat_proto protoreflect.FileDescriptor

var file_svc_infra_link_stat_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x2e, 0x0a, 0x0d, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x12, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x13, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x57, 0x0a, 0x19, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x22, 0x57, 0x0a, 0x19, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x56, 0x0a,
	0x18, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x57, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x8d,
	0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x9b,
	0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x57, 0x0a, 0x13,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x13,
	0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07,
	0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x14, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x75, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x75, 0x76, 0x12, 0x0e,
	0x0a, 0x02, 0x70, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x70, 0x76, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a,
	0x12, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0xb0, 0x0a, 0x0a, 0x08, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x12, 0x5d, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x11, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x11, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d,
	0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x27, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x27, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x26, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x12, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a,
	0x15, 0x2e, 0x2f, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x3b, 0x6c, 0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_infra_link_stat_proto_rawDescOnce sync.Once
	file_svc_infra_link_stat_proto_rawDescData = file_svc_infra_link_stat_proto_rawDesc
)

func file_svc_infra_link_stat_proto_rawDescGZIP() []byte {
	file_svc_infra_link_stat_proto_rawDescOnce.Do(func() {
		file_svc_infra_link_stat_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_infra_link_stat_proto_rawDescData)
	})
	return file_svc_infra_link_stat_proto_rawDescData
}

var file_svc_infra_link_stat_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_svc_infra_link_stat_proto_goTypes = []any{
	(*OnlineDetail)(nil),              // 0: svc.infra.link.online_detail
	(*OnlineDetailList)(nil),          // 1: svc.infra.link.online_detail_list
	(*OnlineCountRequest)(nil),        // 2: svc.infra.link.OnlineCountRequest
	(*OnlineCountResponse)(nil),       // 3: svc.infra.link.OnlineCountResponse
	(*OnlineListRequest)(nil),         // 4: svc.infra.link.OnlineListRequest
	(*OnlineSessionListResponse)(nil), // 5: svc.infra.link.OnlineSessionListResponse
	(*OnlineAccountListResponse)(nil), // 6: svc.infra.link.OnlineAccountListResponse
	(*OnlineDeviceListResponse)(nil),  // 7: svc.infra.link.OnlineDeviceListResponse
	(*CheckSessionRequest)(nil),       // 8: svc.infra.link.CheckSessionRequest
	(*CheckSessionRoomRequest)(nil),   // 9: svc.infra.link.CheckSessionRoomRequest
	(*CheckSessionResponse)(nil),      // 10: svc.infra.link.CheckSessionResponse
	(*CheckAccountRequest)(nil),       // 11: svc.infra.link.CheckAccountRequest
	(*CheckAccountRoomRequest)(nil),   // 12: svc.infra.link.CheckAccountRoomRequest
	(*CheckAccountResponse)(nil),      // 13: svc.infra.link.CheckAccountResponse
	(*CheckDeviceRequest)(nil),        // 14: svc.infra.link.CheckDeviceRequest
	(*CheckDeviceRoomRequest)(nil),    // 15: svc.infra.link.CheckDeviceRoomRequest
	(*RoomLiveStatRequest)(nil),       // 16: svc.infra.link.RoomLiveStatRequest
	(*RoomLiveStatResponse)(nil),      // 17: svc.infra.link.RoomLiveStatResponse
	(*CheckDeviceResponse)(nil),       // 18: svc.infra.link.CheckDeviceResponse
	(*RefreshStatRequest)(nil),        // 19: svc.infra.link.RefreshStatRequest
	(*RefreshStatResponse)(nil),       // 20: svc.infra.link.RefreshStatResponse
	nil,                               // 21: svc.infra.link.CheckSessionResponse.OnlineEntry
	nil,                               // 22: svc.infra.link.CheckAccountResponse.OnlineEntry
	nil,                               // 23: svc.infra.link.CheckDeviceResponse.OnlineEntry
}
var file_svc_infra_link_stat_proto_depIdxs = []int32{
	0,  // 0: svc.infra.link.online_detail_list.list:type_name -> svc.infra.link.online_detail
	1,  // 1: svc.infra.link.OnlineSessionListResponse.online:type_name -> svc.infra.link.online_detail_list
	1,  // 2: svc.infra.link.OnlineAccountListResponse.online:type_name -> svc.infra.link.online_detail_list
	1,  // 3: svc.infra.link.OnlineDeviceListResponse.online:type_name -> svc.infra.link.online_detail_list
	21, // 4: svc.infra.link.CheckSessionResponse.online:type_name -> svc.infra.link.CheckSessionResponse.OnlineEntry
	22, // 5: svc.infra.link.CheckAccountResponse.online:type_name -> svc.infra.link.CheckAccountResponse.OnlineEntry
	23, // 6: svc.infra.link.CheckDeviceResponse.online:type_name -> svc.infra.link.CheckDeviceResponse.OnlineEntry
	2,  // 7: svc.infra.link.LinkStat.OnlineSessionCount:input_type -> svc.infra.link.OnlineCountRequest
	2,  // 8: svc.infra.link.LinkStat.OnlineAccountCount:input_type -> svc.infra.link.OnlineCountRequest
	2,  // 9: svc.infra.link.LinkStat.OnlineDeviceCount:input_type -> svc.infra.link.OnlineCountRequest
	4,  // 10: svc.infra.link.LinkStat.OnlineSessionList:input_type -> svc.infra.link.OnlineListRequest
	4,  // 11: svc.infra.link.LinkStat.OnlineAccountList:input_type -> svc.infra.link.OnlineListRequest
	4,  // 12: svc.infra.link.LinkStat.OnlineDeviceList:input_type -> svc.infra.link.OnlineListRequest
	8,  // 13: svc.infra.link.LinkStat.CheckSession:input_type -> svc.infra.link.CheckSessionRequest
	11, // 14: svc.infra.link.LinkStat.CheckAccount:input_type -> svc.infra.link.CheckAccountRequest
	14, // 15: svc.infra.link.LinkStat.CheckDevice:input_type -> svc.infra.link.CheckDeviceRequest
	16, // 16: svc.infra.link.LinkStat.RoomLiveStat:input_type -> svc.infra.link.RoomLiveStatRequest
	12, // 17: svc.infra.link.LinkStat.CheckAccountRoom:input_type -> svc.infra.link.CheckAccountRoomRequest
	9,  // 18: svc.infra.link.LinkStat.CheckSessionRoom:input_type -> svc.infra.link.CheckSessionRoomRequest
	15, // 19: svc.infra.link.LinkStat.CheckDeviceRoom:input_type -> svc.infra.link.CheckDeviceRoomRequest
	19, // 20: svc.infra.link.LinkStat.Refresh:input_type -> svc.infra.link.RefreshStatRequest
	3,  // 21: svc.infra.link.LinkStat.OnlineSessionCount:output_type -> svc.infra.link.OnlineCountResponse
	3,  // 22: svc.infra.link.LinkStat.OnlineAccountCount:output_type -> svc.infra.link.OnlineCountResponse
	3,  // 23: svc.infra.link.LinkStat.OnlineDeviceCount:output_type -> svc.infra.link.OnlineCountResponse
	5,  // 24: svc.infra.link.LinkStat.OnlineSessionList:output_type -> svc.infra.link.OnlineSessionListResponse
	6,  // 25: svc.infra.link.LinkStat.OnlineAccountList:output_type -> svc.infra.link.OnlineAccountListResponse
	7,  // 26: svc.infra.link.LinkStat.OnlineDeviceList:output_type -> svc.infra.link.OnlineDeviceListResponse
	10, // 27: svc.infra.link.LinkStat.CheckSession:output_type -> svc.infra.link.CheckSessionResponse
	13, // 28: svc.infra.link.LinkStat.CheckAccount:output_type -> svc.infra.link.CheckAccountResponse
	18, // 29: svc.infra.link.LinkStat.CheckDevice:output_type -> svc.infra.link.CheckDeviceResponse
	17, // 30: svc.infra.link.LinkStat.RoomLiveStat:output_type -> svc.infra.link.RoomLiveStatResponse
	13, // 31: svc.infra.link.LinkStat.CheckAccountRoom:output_type -> svc.infra.link.CheckAccountResponse
	10, // 32: svc.infra.link.LinkStat.CheckSessionRoom:output_type -> svc.infra.link.CheckSessionResponse
	18, // 33: svc.infra.link.LinkStat.CheckDeviceRoom:output_type -> svc.infra.link.CheckDeviceResponse
	20, // 34: svc.infra.link.LinkStat.Refresh:output_type -> svc.infra.link.RefreshStatResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_svc_infra_link_stat_proto_init() }
func file_svc_infra_link_stat_proto_init() {
	if File_svc_infra_link_stat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_infra_link_stat_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineDetailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineSessionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineAccountListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*OnlineDeviceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CheckSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CheckSessionRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CheckSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CheckAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CheckAccountRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CheckAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CheckDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CheckDeviceRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RoomLiveStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RoomLiveStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CheckDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_stat_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_svc_infra_link_stat_proto_msgTypes[4].OneofWrappers = []any{}
	file_svc_infra_link_stat_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_infra_link_stat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_infra_link_stat_proto_goTypes,
		DependencyIndexes: file_svc_infra_link_stat_proto_depIdxs,
		MessageInfos:      file_svc_infra_link_stat_proto_msgTypes,
	}.Build()
	File_svc_infra_link_stat_proto = out.File
	file_svc_infra_link_stat_proto_rawDesc = nil
	file_svc_infra_link_stat_proto_goTypes = nil
	file_svc_infra_link_stat_proto_depIdxs = nil
}
