syntax = "proto3";


package svc.infra.link;
option go_package = "./svc.infra.link;link";

// Service of stat
service LinkStat {
  // 获取在线连接数
  rpc OnlineSessionCount(OnlineCountRequest) returns (OnlineCountResponse);
  // 获取在线账号数
  rpc OnlineAccountCount(OnlineCountRequest) returns (OnlineCountResponse);
  // 获取在线设备数
  rpc OnlineDeviceCount(OnlineCountRequest) returns (OnlineCountResponse);

  // 获取在线连接列表
  rpc OnlineSessionList(OnlineListRequest) returns (OnlineSessionListResponse);
  // 获取在线账号列表
  rpc OnlineAccountList(OnlineListRequest) returns (OnlineAccountListResponse);
  // 获取在线设备列表
  rpc OnlineDeviceList(OnlineListRequest) returns (OnlineDeviceListResponse);

  // 检查连接是否在线
  rpc CheckSession(CheckSessionRequest) returns (CheckSessionResponse);
  // 检查账号是否在线
  rpc CheckAccount(CheckAccountRequest) returns (CheckAccountResponse);
  // 检查设备是否在线
  rpc CheckDevice(CheckDeviceRequest) returns (CheckDeviceResponse);
  // 直播间统计数据
  rpc RoomLiveStat(RoomLiveStatRequest) returns (RoomLiveStatResponse);
  // 检查账号是否在房间内
  rpc CheckAccountRoom(CheckAccountRoomRequest) returns (CheckAccountResponse);
  // 检查session是否在房间内
  rpc CheckSessionRoom(CheckSessionRoomRequest) returns (CheckSessionResponse);
  // 检查设备是否在房间内
  rpc CheckDeviceRoom(CheckDeviceRoomRequest) returns (CheckDeviceResponse);


  // 刷新统计
  rpc Refresh(RefreshStatRequest) returns (RefreshStatResponse);
};

message online_detail {
  string account_id = 1;                       // 账号ID
};

message online_detail_list {
  repeated online_detail list = 1;            // 列表
};

message OnlineCountRequest {
  string merchant_id = 1;                      // 商户ID
  string group_id = 2;                         // 群组ID
};
message OnlineCountResponse {
  int64 count = 1;                            // 总数
};

message OnlineListRequest {
  string merchant_id = 1;                      // 商户ID
  string group_id = 2;                         // 群组ID
  int64 page = 3;                             // 分页码
  optional int64 size = 4;                    // 数量
};
message OnlineSessionListResponse {
  online_detail_list online = 1;              // 在线列表
};
message OnlineAccountListResponse {
  online_detail_list online = 1;  // 在线列表
};
message OnlineDeviceListResponse {
  online_detail_list online = 1; // 在线列表
};

message CheckSessionRequest {
  string merchant_id = 1;                      // 商户ID
  repeated string session_ids = 2;            // 连接ID（列表）
};
message CheckSessionRoomRequest {
  string merchant_id = 1;                      // 商户ID
  repeated string session_ids = 2;            // 连接ID（列表）
  string room_id = 3;                          // 房间ID
  string live_id = 4;                          // 直播ID, 房间ID和直播ID 不能同时为空
};

message CheckSessionResponse {
  map<string, bool> online = 1;               // 连接ID => 是否在线
};

message CheckAccountRequest {
  string merchant_id = 1;                      // 商户ID
  repeated string account_ids = 2;             // 账号ID（列表）
};
message CheckAccountRoomRequest {
  string merchant_id = 1;                      // 商户ID
  repeated string account_ids = 2;             // 账号ID（列表）
  string room_id = 3;                          // 房间ID
  string live_id = 4;                          // 直播ID, 房间ID和直播ID 不能同时为空
};
message CheckAccountResponse {
  map<string, bool> online = 1;                // 账号ID => 是否在线
};

message CheckDeviceRequest {
  string merchant_id = 1;                      // 商户ID
  repeated string devices = 2;                // 设备标识（列表）
};
message CheckDeviceRoomRequest {
  string merchant_id = 1;                      // 商户ID
  repeated string devices = 2;                // 设备标识（列表）
  string room_id = 3;                          // 房间ID
  string live_id = 4;                          // 直播ID, 房间ID和直播ID 不能同时为空
};



message RoomLiveStatRequest {
  string room_id = 1;                      // 房间ID, 目前只会保留前三次直播数据
  optional string live_id = 2;                      // 开播ID, 如果为空将以直播间最后一次直播的数据.
};

message RoomLiveStatResponse {
  int64 uv = 1;         // 总人次
  int64 pv = 2;         // 累计观看数
  int64 high = 3;       // 高峰人数
  int64 real_count = 4; // 实时人数
};

message CheckDeviceResponse {
  map<string, bool> online = 1;               // 设备标识 => 是否在线
};

message RefreshStatRequest {};
message RefreshStatResponse {
  bool ok = 1;                                // 是否刷新成功
};