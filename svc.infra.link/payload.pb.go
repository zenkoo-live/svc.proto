// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: svc.infra.link/payload.proto

package link

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PriorityType 消息权重
type PriorityType int32

const (
	PriorityType_Low    PriorityType = 0   // 低
	PriorityType_Middle PriorityType = 5   // 中
	PriorityType_High   PriorityType = 10  // 高
	PriorityType_Ultra  PriorityType = 100 // 超高
)

// Enum value maps for PriorityType.
var (
	PriorityType_name = map[int32]string{
		0:   "Low",
		5:   "Middle",
		10:  "High",
		100: "Ultra",
	}
	PriorityType_value = map[string]int32{
		"Low":    0,
		"Middle": 5,
		"High":   10,
		"Ultra":  100,
	}
)

func (x PriorityType) Enum() *PriorityType {
	p := new(PriorityType)
	*p = x
	return p
}

func (x PriorityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PriorityType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[0].Descriptor()
}

func (PriorityType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[0]
}

func (x PriorityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PriorityType.Descriptor instead.
func (PriorityType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{0}
}

// 消息命令类型
type CommandType int32

const (
	CommandType_UnKnow             CommandType = 0  // 未知
	CommandType_CommandMsgDownward CommandType = 10 // 通用下行消息
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0:  "UnKnow",
		10: "CommandMsgDownward",
	}
	CommandType_value = map[string]int32{
		"UnKnow":             0,
		"CommandMsgDownward": 10,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[1].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[1]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{1}
}

type LevelType int32

const (
	LevelType_LevelUnKnow LevelType = 0
	LevelType_Charm       LevelType = 1
	LevelType_Fans        LevelType = 2
	LevelType_Guard       LevelType = 3
)

// Enum value maps for LevelType.
var (
	LevelType_name = map[int32]string{
		0: "LevelUnKnow",
		1: "Charm",
		2: "Fans",
		3: "Guard",
	}
	LevelType_value = map[string]int32{
		"LevelUnKnow": 0,
		"Charm":       1,
		"Fans":        2,
		"Guard":       3,
	}
)

func (x LevelType) Enum() *LevelType {
	p := new(LevelType)
	*p = x
	return p
}

func (x LevelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LevelType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[2].Descriptor()
}

func (LevelType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[2]
}

func (x LevelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LevelType.Descriptor instead.
func (LevelType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{2}
}

// 业务消息类型
type PayloadType int32

const (
	PayloadType_StreamerDm       PayloadType = 0    // 主播弹幕
	PayloadType_UserCommDm       PayloadType = 1    // 普通弹幕
	PayloadType_UserVipDm        PayloadType = 2    // 付费弹幕
	PayloadType_UserGift         PayloadType = 3    // 用户送礼
	PayloadType_UserOpenFans     PayloadType = 4    // 开通粉丝团
	PayloadType_UserOpenGuard    PayloadType = 5    // 开通贵族
	PayloadType_EnterRoom        PayloadType = 6    // 用户进入房间
	PayloadType_StreamerNotice   PayloadType = 7    // 主播公告通知
	PayloadType_StreamerCard     PayloadType = 8    // 主播名片通知
	PayloadType_UserKickRoom     PayloadType = 13   // 踢出房间
	PayloadType_StreamerOffline  PayloadType = 14   // 主播下播
	PayloadType_StreamerOnline   PayloadType = 15   // 主播开播
	PayloadType_StreamerPause    PayloadType = 16   // 主播暂停
	PayloadType_StreamerResume   PayloadType = 17   // 主播恢复
	PayloadType_UserSubscribe    PayloadType = 18   // 用户关注主播
	PayloadType_UserUnSubscribe  PayloadType = 19   // 用户取消关注主播
	PayloadType_UserForbid       PayloadType = 20   // 用户禁言
	PayloadType_UserResetForbid  PayloadType = 21   // 用户解除禁言
	PayloadType_UserRoomAdm      PayloadType = 22   // 用户房管
	PayloadType_UserRoomResetAdm PayloadType = 23   // 用户撤销房管
	PayloadType_PlatformNotice   PayloadType = 1000 // 全平台通知
)

// Enum value maps for PayloadType.
var (
	PayloadType_name = map[int32]string{
		0:    "StreamerDm",
		1:    "UserCommDm",
		2:    "UserVipDm",
		3:    "UserGift",
		4:    "UserOpenFans",
		5:    "UserOpenGuard",
		6:    "EnterRoom",
		7:    "StreamerNotice",
		8:    "StreamerCard",
		13:   "UserKickRoom",
		14:   "StreamerOffline",
		15:   "StreamerOnline",
		16:   "StreamerPause",
		17:   "StreamerResume",
		18:   "UserSubscribe",
		19:   "UserUnSubscribe",
		20:   "UserForbid",
		21:   "UserResetForbid",
		22:   "UserRoomAdm",
		23:   "UserRoomResetAdm",
		1000: "PlatformNotice",
	}
	PayloadType_value = map[string]int32{
		"StreamerDm":       0,
		"UserCommDm":       1,
		"UserVipDm":        2,
		"UserGift":         3,
		"UserOpenFans":     4,
		"UserOpenGuard":    5,
		"EnterRoom":        6,
		"StreamerNotice":   7,
		"StreamerCard":     8,
		"UserKickRoom":     13,
		"StreamerOffline":  14,
		"StreamerOnline":   15,
		"StreamerPause":    16,
		"StreamerResume":   17,
		"UserSubscribe":    18,
		"UserUnSubscribe":  19,
		"UserForbid":       20,
		"UserResetForbid":  21,
		"UserRoomAdm":      22,
		"UserRoomResetAdm": 23,
		"PlatformNotice":   1000,
	}
)

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}

func (x PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[3].Descriptor()
}

func (PayloadType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[3]
}

func (x PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadType.Descriptor instead.
func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{3}
}

// Payload容器
type PayloadWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I int64  `protobuf:"varint,1,opt,name=i,proto3" json:"i,omitempty"`
	T int32  `protobuf:"varint,2,opt,name=t,proto3" json:"t,omitempty"`
	P int32  `protobuf:"varint,3,opt,name=p,proto3" json:"p,omitempty"`
	D string `protobuf:"bytes,11,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *PayloadWrap) Reset() {
	*x = PayloadWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadWrap) ProtoMessage() {}

func (x *PayloadWrap) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadWrap.ProtoReflect.Descriptor instead.
func (*PayloadWrap) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{0}
}

func (x *PayloadWrap) GetI() int64 {
	if x != nil {
		return x.I
	}
	return 0
}

func (x *PayloadWrap) GetT() int32 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *PayloadWrap) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *PayloadWrap) GetD() string {
	if x != nil {
		return x.D
	}
	return ""
}

// 贵族消息
type PayloadGuard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exp   int32 `protobuf:"varint,1,opt,name=exp,proto3" json:"exp,omitempty"`     // 贵族类型
	Level int64 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"` // 贵族等级
}

func (x *PayloadGuard) Reset() {
	*x = PayloadGuard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadGuard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadGuard) ProtoMessage() {}

func (x *PayloadGuard) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadGuard.ProtoReflect.Descriptor instead.
func (*PayloadGuard) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{1}
}

func (x *PayloadGuard) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *PayloadGuard) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

// 粉丝消息
type PayloadFans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"` // 粉丝等级
	Exp   int64 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`     // 粉丝经验
}

func (x *PayloadFans) Reset() {
	*x = PayloadFans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadFans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadFans) ProtoMessage() {}

func (x *PayloadFans) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadFans.ProtoReflect.Descriptor instead.
func (*PayloadFans) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{2}
}

func (x *PayloadFans) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PayloadFans) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

// 魅力值
type PayloadCharm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"` // 魅力值等级
	Exp   int64 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`     // 魅力值
}

func (x *PayloadCharm) Reset() {
	*x = PayloadCharm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadCharm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadCharm) ProtoMessage() {}

func (x *PayloadCharm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadCharm.ProtoReflect.Descriptor instead.
func (*PayloadCharm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{3}
}

func (x *PayloadCharm) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PayloadCharm) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

// PayloadUserComm 通用用户信息
// 发送提出房间， 禁言，房管，超管等信息
type PayloadUserComm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                    // 用户UID
	Nickname   string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                          // 昵称
	Avatar     string        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                              // 头像地址
	IsRoomAdm  bool          `protobuf:"varint,4,opt,name=is_room_adm,json=isRoomAdm,proto3" json:"is_room_adm,omitempty"`    // 房管
	IsSuperAdm bool          `protobuf:"varint,5,opt,name=is_super_adm,json=isSuperAdm,proto3" json:"is_super_adm,omitempty"` // 是否超管
	Charm      *PayloadCharm `protobuf:"bytes,6,opt,name=charm,proto3" json:"charm,omitempty"`                                // 魅力值
	Fans       *PayloadFans  `protobuf:"bytes,7,opt,name=fans,proto3" json:"fans,omitempty"`                                  // 粉丝信息
	Guard      *PayloadGuard `protobuf:"bytes,8,opt,name=guard,proto3" json:"guard,omitempty"`                                // 守护信息
}

func (x *PayloadUserComm) Reset() {
	*x = PayloadUserComm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadUserComm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserComm) ProtoMessage() {}

func (x *PayloadUserComm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserComm.ProtoReflect.Descriptor instead.
func (*PayloadUserComm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{4}
}

func (x *PayloadUserComm) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadUserComm) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadUserComm) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadUserComm) GetIsRoomAdm() bool {
	if x != nil {
		return x.IsRoomAdm
	}
	return false
}

func (x *PayloadUserComm) GetIsSuperAdm() bool {
	if x != nil {
		return x.IsSuperAdm
	}
	return false
}

func (x *PayloadUserComm) GetCharm() *PayloadCharm {
	if x != nil {
		return x.Charm
	}
	return nil
}

func (x *PayloadUserComm) GetFans() *PayloadFans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PayloadUserComm) GetGuard() *PayloadGuard {
	if x != nil {
		return x.Guard
	}
	return nil
}

// 全平台公告信息
type PayloadPlatformNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 公告消息
}

func (x *PayloadPlatformNotice) Reset() {
	*x = PayloadPlatformNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadPlatformNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadPlatformNotice) ProtoMessage() {}

func (x *PayloadPlatformNotice) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadPlatformNotice.ProtoReflect.Descriptor instead.
func (*PayloadPlatformNotice) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{5}
}

func (x *PayloadPlatformNotice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 公告
type PayloadStreamNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 公告内容
}

func (x *PayloadStreamNotice) Reset() {
	*x = PayloadStreamNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadStreamNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamNotice) ProtoMessage() {}

func (x *PayloadStreamNotice) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamNotice.ProtoReflect.Descriptor instead.
func (*PayloadStreamNotice) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{6}
}

func (x *PayloadStreamNotice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 名片包装
type PayloadStreamerCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PayloadStreamerCard) Reset() {
	*x = PayloadStreamerCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadStreamerCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerCard) ProtoMessage() {}

func (x *PayloadStreamerCard) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerCard.ProtoReflect.Descriptor instead.
func (*PayloadStreamerCard) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{7}
}

type PayloadStreamerOffline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Forbid string `protobuf:"bytes,1,opt,name=forbid,proto3" json:"forbid,omitempty"` // 被封禁下播的原因
}

func (x *PayloadStreamerOffline) Reset() {
	*x = PayloadStreamerOffline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadStreamerOffline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerOffline) ProtoMessage() {}

func (x *PayloadStreamerOffline) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerOffline.ProtoReflect.Descriptor instead.
func (*PayloadStreamerOffline) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{8}
}

func (x *PayloadStreamerOffline) GetForbid() string {
	if x != nil {
		return x.Forbid
	}
	return ""
}

// 用户送礼
type PayloadUserGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                     // 送礼人ID
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`           // 送礼人昵称
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`               // 送礼人头像
	Count    int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`                // 礼物数量
	Combo    int32  `protobuf:"varint,5,opt,name=combo,proto3" json:"combo,omitempty"`                // combo数
	Name     string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                   // 礼物名称
	Icon     string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                   // 礼物icon
	GiftId   string `protobuf:"bytes,8,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"` // 礼物ID
}

func (x *PayloadUserGift) Reset() {
	*x = PayloadUserGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadUserGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserGift) ProtoMessage() {}

func (x *PayloadUserGift) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserGift.ProtoReflect.Descriptor instead.
func (*PayloadUserGift) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{9}
}

func (x *PayloadUserGift) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadUserGift) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadUserGift) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadUserGift) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PayloadUserGift) GetCombo() int32 {
	if x != nil {
		return x.Combo
	}
	return 0
}

func (x *PayloadUserGift) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayloadUserGift) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PayloadUserGift) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

// 进入房间
type PayloadEnterRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                    // 用户UID
	Nickname   string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                          // 昵称
	Avatar     string        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                              // 头像地址
	IsRoomAdm  bool          `protobuf:"varint,4,opt,name=is_room_adm,json=isRoomAdm,proto3" json:"is_room_adm,omitempty"`    // 房管
	IsSuperAdm bool          `protobuf:"varint,5,opt,name=is_super_adm,json=isSuperAdm,proto3" json:"is_super_adm,omitempty"` // 是否超管
	Charm      *PayloadCharm `protobuf:"bytes,6,opt,name=charm,proto3" json:"charm,omitempty"`                                // 魅力值
	Fans       *PayloadFans  `protobuf:"bytes,7,opt,name=fans,proto3" json:"fans,omitempty"`                                  // 粉丝信息
	Guard      *PayloadGuard `protobuf:"bytes,8,opt,name=guard,proto3" json:"guard,omitempty"`                                // 守护信息
}

func (x *PayloadEnterRoom) Reset() {
	*x = PayloadEnterRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadEnterRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadEnterRoom) ProtoMessage() {}

func (x *PayloadEnterRoom) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadEnterRoom.ProtoReflect.Descriptor instead.
func (*PayloadEnterRoom) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{10}
}

func (x *PayloadEnterRoom) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadEnterRoom) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadEnterRoom) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadEnterRoom) GetIsRoomAdm() bool {
	if x != nil {
		return x.IsRoomAdm
	}
	return false
}

func (x *PayloadEnterRoom) GetIsSuperAdm() bool {
	if x != nil {
		return x.IsSuperAdm
	}
	return false
}

func (x *PayloadEnterRoom) GetCharm() *PayloadCharm {
	if x != nil {
		return x.Charm
	}
	return nil
}

func (x *PayloadEnterRoom) GetFans() *PayloadFans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PayloadEnterRoom) GetGuard() *PayloadGuard {
	if x != nil {
		return x.Guard
	}
	return nil
}

// PayloadOpenGz 开通贵族信息 消息为全站消息
// 根据streamer_id判断是否当前房间
type PayloadOpenGuard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                        // 用户UID
	Nickname     string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                              // 昵称
	Avatar       string        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                  // 头像地址
	IsRoomAdm    bool          `protobuf:"varint,4,opt,name=is_room_adm,json=isRoomAdm,proto3" json:"is_room_adm,omitempty"`        // 房管
	IsSuperAdm   bool          `protobuf:"varint,5,opt,name=is_super_adm,json=isSuperAdm,proto3" json:"is_super_adm,omitempty"`     // 是否超管
	Charm        *PayloadCharm `protobuf:"bytes,6,opt,name=charm,proto3" json:"charm,omitempty"`                                    // 魅力值
	Fans         *PayloadFans  `protobuf:"bytes,7,opt,name=fans,proto3" json:"fans,omitempty"`                                      // 粉丝信息
	Guard        *PayloadGuard `protobuf:"bytes,8,opt,name=guard,proto3" json:"guard,omitempty"`                                    // 守护信息
	RoomId       string        `protobuf:"bytes,9,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                    // 对应直播间
	StreamerId   string        `protobuf:"bytes,10,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`       // 对应直播间,
	StreamerName string        `protobuf:"bytes,11,opt,name=streamer_name,json=streamerName,proto3" json:"streamer_name,omitempty"` // 对应主播名称
}

func (x *PayloadOpenGuard) Reset() {
	*x = PayloadOpenGuard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadOpenGuard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadOpenGuard) ProtoMessage() {}

func (x *PayloadOpenGuard) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadOpenGuard.ProtoReflect.Descriptor instead.
func (*PayloadOpenGuard) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{11}
}

func (x *PayloadOpenGuard) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadOpenGuard) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadOpenGuard) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadOpenGuard) GetIsRoomAdm() bool {
	if x != nil {
		return x.IsRoomAdm
	}
	return false
}

func (x *PayloadOpenGuard) GetIsSuperAdm() bool {
	if x != nil {
		return x.IsSuperAdm
	}
	return false
}

func (x *PayloadOpenGuard) GetCharm() *PayloadCharm {
	if x != nil {
		return x.Charm
	}
	return nil
}

func (x *PayloadOpenGuard) GetFans() *PayloadFans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PayloadOpenGuard) GetGuard() *PayloadGuard {
	if x != nil {
		return x.Guard
	}
	return nil
}

func (x *PayloadOpenGuard) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *PayloadOpenGuard) GetStreamerId() string {
	if x != nil {
		return x.StreamerId
	}
	return ""
}

func (x *PayloadOpenGuard) GetStreamerName() string {
	if x != nil {
		return x.StreamerName
	}
	return ""
}

// PayloadInOutFansGroup 用户加入退出粉丝团
type PayloadOpenFansGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                       // 用户UID
	Nickname     string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                             // 昵称
	Avatar       string        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                 // 头像地址
	StreamerId   string        `protobuf:"bytes,4,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`       // 对应直播间,
	StreamerName string        `protobuf:"bytes,5,opt,name=streamer_name,json=streamerName,proto3" json:"streamer_name,omitempty"` // 对应主播名称
	Charm        *PayloadCharm `protobuf:"bytes,6,opt,name=charm,proto3" json:"charm,omitempty"`                                   // 魅力值
	Fans         *PayloadFans  `protobuf:"bytes,7,opt,name=fans,proto3" json:"fans,omitempty"`                                     // 粉丝信息
	Guard        *PayloadGuard `protobuf:"bytes,8,opt,name=guard,proto3" json:"guard,omitempty"`                                   // 守护信息
	Rank         int64         `protobuf:"varint,9,opt,name=rank,proto3" json:"rank,omitempty"`                                    // 排名
}

func (x *PayloadOpenFansGroup) Reset() {
	*x = PayloadOpenFansGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadOpenFansGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadOpenFansGroup) ProtoMessage() {}

func (x *PayloadOpenFansGroup) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadOpenFansGroup.ProtoReflect.Descriptor instead.
func (*PayloadOpenFansGroup) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{12}
}

func (x *PayloadOpenFansGroup) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadOpenFansGroup) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadOpenFansGroup) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadOpenFansGroup) GetStreamerId() string {
	if x != nil {
		return x.StreamerId
	}
	return ""
}

func (x *PayloadOpenFansGroup) GetStreamerName() string {
	if x != nil {
		return x.StreamerName
	}
	return ""
}

func (x *PayloadOpenFansGroup) GetCharm() *PayloadCharm {
	if x != nil {
		return x.Charm
	}
	return nil
}

func (x *PayloadOpenFansGroup) GetFans() *PayloadFans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PayloadOpenFansGroup) GetGuard() *PayloadGuard {
	if x != nil {
		return x.Guard
	}
	return nil
}

func (x *PayloadOpenFansGroup) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// PayloadUserLevelUp 用户等级升级，根据类型区分
type PayloadUserLevelUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                             // 用户UID
	Nickname  string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                   // 昵称
	Avatar    string        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                       // 头像地址
	LevelType LevelType     `protobuf:"varint,4,opt,name=level_type,json=levelType,proto3,enum=svc.infra.link.LevelType" json:"level_type,omitempty"` // 等级升级类型
	Charm     *PayloadCharm `protobuf:"bytes,5,opt,name=charm,proto3" json:"charm,omitempty"`                                                         // 魅力值
	Fans      *PayloadFans  `protobuf:"bytes,6,opt,name=fans,proto3" json:"fans,omitempty"`                                                           // 粉丝
	Guard     *PayloadGuard `protobuf:"bytes,7,opt,name=guard,proto3" json:"guard,omitempty"`                                                         // 贵族
}

func (x *PayloadUserLevelUp) Reset() {
	*x = PayloadUserLevelUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadUserLevelUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserLevelUp) ProtoMessage() {}

func (x *PayloadUserLevelUp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserLevelUp.ProtoReflect.Descriptor instead.
func (*PayloadUserLevelUp) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{13}
}

func (x *PayloadUserLevelUp) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadUserLevelUp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadUserLevelUp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadUserLevelUp) GetLevelType() LevelType {
	if x != nil {
		return x.LevelType
	}
	return LevelType_LevelUnKnow
}

func (x *PayloadUserLevelUp) GetCharm() *PayloadCharm {
	if x != nil {
		return x.Charm
	}
	return nil
}

func (x *PayloadUserLevelUp) GetFans() *PayloadFans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PayloadUserLevelUp) GetGuard() *PayloadGuard {
	if x != nil {
		return x.Guard
	}
	return nil
}

// PayloadUserSubUnSubscribe 用户关注或取消关注
type PayloadUserSubUnSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                        // 用户UID
	Nickname     string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                              // 昵称
	Avatar       string        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                  // 头像地址
	IsRoomAdm    bool          `protobuf:"varint,4,opt,name=is_room_adm,json=isRoomAdm,proto3" json:"is_room_adm,omitempty"`        // 房管
	IsSuperAdm   bool          `protobuf:"varint,5,opt,name=is_super_adm,json=isSuperAdm,proto3" json:"is_super_adm,omitempty"`     // 是否超管
	Charm        *PayloadCharm `protobuf:"bytes,6,opt,name=charm,proto3" json:"charm,omitempty"`                                    // 魅力值
	Fans         *PayloadFans  `protobuf:"bytes,7,opt,name=fans,proto3" json:"fans,omitempty"`                                      // 粉丝信息
	Guard        *PayloadGuard `protobuf:"bytes,8,opt,name=guard,proto3" json:"guard,omitempty"`                                    // 守护信息
	StreamerId   string        `protobuf:"bytes,9,opt,name=streamer_id,json=streamerId,proto3" json:"streamer_id,omitempty"`        // 主播ID
	StreamerName string        `protobuf:"bytes,10,opt,name=streamer_name,json=streamerName,proto3" json:"streamer_name,omitempty"` // 主播名称
}

func (x *PayloadUserSubUnSubscribe) Reset() {
	*x = PayloadUserSubUnSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadUserSubUnSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserSubUnSubscribe) ProtoMessage() {}

func (x *PayloadUserSubUnSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserSubUnSubscribe.ProtoReflect.Descriptor instead.
func (*PayloadUserSubUnSubscribe) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{14}
}

func (x *PayloadUserSubUnSubscribe) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadUserSubUnSubscribe) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadUserSubUnSubscribe) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadUserSubUnSubscribe) GetIsRoomAdm() bool {
	if x != nil {
		return x.IsRoomAdm
	}
	return false
}

func (x *PayloadUserSubUnSubscribe) GetIsSuperAdm() bool {
	if x != nil {
		return x.IsSuperAdm
	}
	return false
}

func (x *PayloadUserSubUnSubscribe) GetCharm() *PayloadCharm {
	if x != nil {
		return x.Charm
	}
	return nil
}

func (x *PayloadUserSubUnSubscribe) GetFans() *PayloadFans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PayloadUserSubUnSubscribe) GetGuard() *PayloadGuard {
	if x != nil {
		return x.Guard
	}
	return nil
}

func (x *PayloadUserSubUnSubscribe) GetStreamerId() string {
	if x != nil {
		return x.StreamerId
	}
	return ""
}

func (x *PayloadUserSubUnSubscribe) GetStreamerName() string {
	if x != nil {
		return x.StreamerName
	}
	return ""
}

// 主播聊天弹幕消息
type PayloadStreamerDm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`           // 用户UID
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Text     string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`         // 聊天内容
	Avatar   string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像地址
}

func (x *PayloadStreamerDm) Reset() {
	*x = PayloadStreamerDm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadStreamerDm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerDm) ProtoMessage() {}

func (x *PayloadStreamerDm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerDm.ProtoReflect.Descriptor instead.
func (*PayloadStreamerDm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{15}
}

func (x *PayloadStreamerDm) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadStreamerDm) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadStreamerDm) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PayloadStreamerDm) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 用户普通聊天消息
type PayloadUserCommDm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                    // 用户UID
	Nickname   string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                          // 昵称
	Avatar     string        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                              // 头像地址
	IsRoomAdm  bool          `protobuf:"varint,4,opt,name=is_room_adm,json=isRoomAdm,proto3" json:"is_room_adm,omitempty"`    // 房管
	IsSuperAdm bool          `protobuf:"varint,5,opt,name=is_super_adm,json=isSuperAdm,proto3" json:"is_super_adm,omitempty"` // 是否超管
	Charm      *PayloadCharm `protobuf:"bytes,6,opt,name=charm,proto3" json:"charm,omitempty"`                                // 魅力值
	Fans       *PayloadFans  `protobuf:"bytes,7,opt,name=fans,proto3" json:"fans,omitempty"`                                  // 粉丝信息
	Guard      *PayloadGuard `protobuf:"bytes,8,opt,name=guard,proto3" json:"guard,omitempty"`                                // 守护信息
	IsPaidDm   bool          `protobuf:"varint,9,opt,name=is_paid_dm,json=isPaidDm,proto3" json:"is_paid_dm,omitempty"`       // 付费弹幕
	Text       string        `protobuf:"bytes,10,opt,name=text,proto3" json:"text,omitempty"`                                 // 聊天内容
}

func (x *PayloadUserCommDm) Reset() {
	*x = PayloadUserCommDm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_link_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadUserCommDm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserCommDm) ProtoMessage() {}

func (x *PayloadUserCommDm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserCommDm.ProtoReflect.Descriptor instead.
func (*PayloadUserCommDm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{16}
}

func (x *PayloadUserCommDm) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadUserCommDm) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadUserCommDm) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadUserCommDm) GetIsRoomAdm() bool {
	if x != nil {
		return x.IsRoomAdm
	}
	return false
}

func (x *PayloadUserCommDm) GetIsSuperAdm() bool {
	if x != nil {
		return x.IsSuperAdm
	}
	return false
}

func (x *PayloadUserCommDm) GetCharm() *PayloadCharm {
	if x != nil {
		return x.Charm
	}
	return nil
}

func (x *PayloadUserCommDm) GetFans() *PayloadFans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *PayloadUserCommDm) GetGuard() *PayloadGuard {
	if x != nil {
		return x.Guard
	}
	return nil
}

func (x *PayloadUserCommDm) GetIsPaidDm() bool {
	if x != nil {
		return x.IsPaidDm
	}
	return false
}

func (x *PayloadUserCommDm) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_svc_infra_link_payload_proto protoreflect.FileDescriptor

var file_svc_infra_link_payload_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x45,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x72, 0x61, 0x70, 0x12, 0x0c, 0x0a,
	0x01, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x69, 0x12, 0x0c, 0x0a, 0x01, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x64, 0x22, 0x36, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x47, 0x75, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x35, 0x0a,
	0x0b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x65, 0x78, 0x70, 0x22, 0x36, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x78, 0x70, 0x22, 0xb2, 0x02, 0x0a,
	0x0f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52,
	0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x2f, 0x0a, 0x04,
	0x66, 0x61, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x32, 0x0a,
	0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x22, 0x2b, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x29,
	0x0a, 0x13, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x22, 0x30, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x10, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f,
	0x6d, 0x41, 0x64, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68,
	0x61, 0x72, 0x6d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x61,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x22,
	0x92, 0x03, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x47,
	0x75, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x12, 0x32, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d,
	0x12, 0x2f, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61, 0x6e,
	0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xcf, 0x02, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x4f, 0x70, 0x65, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x68, 0x61,
	0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x2f, 0x0a,
	0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0xad, 0x02, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x38, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72,
	0x6d, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61,
	0x6e, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52,
	0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x22, 0x82, 0x03, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x12, 0x32, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d,
	0x12, 0x2f, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61, 0x6e,
	0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x11, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x44, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xe6, 0x02, 0x0a, 0x11, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x44, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52,
	0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x12, 0x2f, 0x0a, 0x04,
	0x66, 0x61, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x32, 0x0a,
	0x05, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x64, 0x6d, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x69, 0x64, 0x44, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x2a, 0x38, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68,
	0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x10, 0x64, 0x2a, 0x31, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x10, 0x0a,
	0x2a, 0x3c, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x61, 0x6e,
	0x73, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x75, 0x61, 0x72, 0x64, 0x10, 0x03, 0x2a, 0x8f,
	0x03, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x44, 0x6d, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x44, 0x6d, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x70, 0x44, 0x6d, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x75, 0x61, 0x72, 0x64, 0x10, 0x05,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x06, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x69, 0x63,
	0x6b, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x0f,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x13, 0x12,
	0x0e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x10, 0x14, 0x12,
	0x13, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x10, 0x15, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d,
	0x41, 0x64, 0x6d, 0x10, 0x16, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x10, 0x17, 0x12, 0x13, 0x0a, 0x0e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x10, 0xe8, 0x07,
	0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x3b, 0x6c, 0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_svc_infra_link_payload_proto_rawDescOnce sync.Once
	file_svc_infra_link_payload_proto_rawDescData = file_svc_infra_link_payload_proto_rawDesc
)

func file_svc_infra_link_payload_proto_rawDescGZIP() []byte {
	file_svc_infra_link_payload_proto_rawDescOnce.Do(func() {
		file_svc_infra_link_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_infra_link_payload_proto_rawDescData)
	})
	return file_svc_infra_link_payload_proto_rawDescData
}

var file_svc_infra_link_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_svc_infra_link_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_svc_infra_link_payload_proto_goTypes = []any{
	(PriorityType)(0),                 // 0: svc.infra.link.PriorityType
	(CommandType)(0),                  // 1: svc.infra.link.CommandType
	(LevelType)(0),                    // 2: svc.infra.link.LevelType
	(PayloadType)(0),                  // 3: svc.infra.link.PayloadType
	(*PayloadWrap)(nil),               // 4: svc.infra.link.PayloadWrap
	(*PayloadGuard)(nil),              // 5: svc.infra.link.PayloadGuard
	(*PayloadFans)(nil),               // 6: svc.infra.link.PayloadFans
	(*PayloadCharm)(nil),              // 7: svc.infra.link.PayloadCharm
	(*PayloadUserComm)(nil),           // 8: svc.infra.link.PayloadUserComm
	(*PayloadPlatformNotice)(nil),     // 9: svc.infra.link.PayloadPlatformNotice
	(*PayloadStreamNotice)(nil),       // 10: svc.infra.link.PayloadStreamNotice
	(*PayloadStreamerCard)(nil),       // 11: svc.infra.link.PayloadStreamerCard
	(*PayloadStreamerOffline)(nil),    // 12: svc.infra.link.PayloadStreamerOffline
	(*PayloadUserGift)(nil),           // 13: svc.infra.link.PayloadUserGift
	(*PayloadEnterRoom)(nil),          // 14: svc.infra.link.PayloadEnterRoom
	(*PayloadOpenGuard)(nil),          // 15: svc.infra.link.PayloadOpenGuard
	(*PayloadOpenFansGroup)(nil),      // 16: svc.infra.link.PayloadOpenFansGroup
	(*PayloadUserLevelUp)(nil),        // 17: svc.infra.link.PayloadUserLevelUp
	(*PayloadUserSubUnSubscribe)(nil), // 18: svc.infra.link.PayloadUserSubUnSubscribe
	(*PayloadStreamerDm)(nil),         // 19: svc.infra.link.PayloadStreamerDm
	(*PayloadUserCommDm)(nil),         // 20: svc.infra.link.PayloadUserCommDm
}
var file_svc_infra_link_payload_proto_depIdxs = []int32{
	7,  // 0: svc.infra.link.PayloadUserComm.charm:type_name -> svc.infra.link.PayloadCharm
	6,  // 1: svc.infra.link.PayloadUserComm.fans:type_name -> svc.infra.link.PayloadFans
	5,  // 2: svc.infra.link.PayloadUserComm.guard:type_name -> svc.infra.link.PayloadGuard
	7,  // 3: svc.infra.link.PayloadEnterRoom.charm:type_name -> svc.infra.link.PayloadCharm
	6,  // 4: svc.infra.link.PayloadEnterRoom.fans:type_name -> svc.infra.link.PayloadFans
	5,  // 5: svc.infra.link.PayloadEnterRoom.guard:type_name -> svc.infra.link.PayloadGuard
	7,  // 6: svc.infra.link.PayloadOpenGuard.charm:type_name -> svc.infra.link.PayloadCharm
	6,  // 7: svc.infra.link.PayloadOpenGuard.fans:type_name -> svc.infra.link.PayloadFans
	5,  // 8: svc.infra.link.PayloadOpenGuard.guard:type_name -> svc.infra.link.PayloadGuard
	7,  // 9: svc.infra.link.PayloadOpenFansGroup.charm:type_name -> svc.infra.link.PayloadCharm
	6,  // 10: svc.infra.link.PayloadOpenFansGroup.fans:type_name -> svc.infra.link.PayloadFans
	5,  // 11: svc.infra.link.PayloadOpenFansGroup.guard:type_name -> svc.infra.link.PayloadGuard
	2,  // 12: svc.infra.link.PayloadUserLevelUp.level_type:type_name -> svc.infra.link.LevelType
	7,  // 13: svc.infra.link.PayloadUserLevelUp.charm:type_name -> svc.infra.link.PayloadCharm
	6,  // 14: svc.infra.link.PayloadUserLevelUp.fans:type_name -> svc.infra.link.PayloadFans
	5,  // 15: svc.infra.link.PayloadUserLevelUp.guard:type_name -> svc.infra.link.PayloadGuard
	7,  // 16: svc.infra.link.PayloadUserSubUnSubscribe.charm:type_name -> svc.infra.link.PayloadCharm
	6,  // 17: svc.infra.link.PayloadUserSubUnSubscribe.fans:type_name -> svc.infra.link.PayloadFans
	5,  // 18: svc.infra.link.PayloadUserSubUnSubscribe.guard:type_name -> svc.infra.link.PayloadGuard
	7,  // 19: svc.infra.link.PayloadUserCommDm.charm:type_name -> svc.infra.link.PayloadCharm
	6,  // 20: svc.infra.link.PayloadUserCommDm.fans:type_name -> svc.infra.link.PayloadFans
	5,  // 21: svc.infra.link.PayloadUserCommDm.guard:type_name -> svc.infra.link.PayloadGuard
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_svc_infra_link_payload_proto_init() }
func file_svc_infra_link_payload_proto_init() {
	if File_svc_infra_link_payload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_infra_link_payload_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadGuard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadFans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadCharm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadUserComm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadPlatformNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadStreamNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadStreamerCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadStreamerOffline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadUserGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadEnterRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadOpenGuard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadOpenFansGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadUserLevelUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadUserSubUnSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadStreamerDm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_link_payload_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PayloadUserCommDm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_infra_link_payload_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svc_infra_link_payload_proto_goTypes,
		DependencyIndexes: file_svc_infra_link_payload_proto_depIdxs,
		EnumInfos:         file_svc_infra_link_payload_proto_enumTypes,
		MessageInfos:      file_svc_infra_link_payload_proto_msgTypes,
	}.Build()
	File_svc_infra_link_payload_proto = out.File
	file_svc_infra_link_payload_proto_rawDesc = nil
	file_svc_infra_link_payload_proto_goTypes = nil
	file_svc_infra_link_payload_proto_depIdxs = nil
}
