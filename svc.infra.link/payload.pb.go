// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: svc.infra.link/payload.proto

package link

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PriorityType 消息权重
type PriorityType int32

const (
	PriorityType_Low    PriorityType = 0   // 低
	PriorityType_Middle PriorityType = 5   // 中
	PriorityType_High   PriorityType = 10  // 高
	PriorityType_Ultra  PriorityType = 100 // 超高
)

// Enum value maps for PriorityType.
var (
	PriorityType_name = map[int32]string{
		0:   "Low",
		5:   "Middle",
		10:  "High",
		100: "Ultra",
	}
	PriorityType_value = map[string]int32{
		"Low":    0,
		"Middle": 5,
		"High":   10,
		"Ultra":  100,
	}
)

func (x PriorityType) Enum() *PriorityType {
	p := new(PriorityType)
	*p = x
	return p
}

func (x PriorityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PriorityType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[0].Descriptor()
}

func (PriorityType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[0]
}

func (x PriorityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PriorityType.Descriptor instead.
func (PriorityType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{0}
}

// 消息命令类型
type CommandType int32

const (
	CommandType_UnKnow             CommandType = 0  // 未知
	CommandType_CommandMsgDownward CommandType = 10 // 通用下行消息
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0:  "UnKnow",
		10: "CommandMsgDownward",
	}
	CommandType_value = map[string]int32{
		"UnKnow":             0,
		"CommandMsgDownward": 10,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[1].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[1]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{1}
}

type LevelType int32

const (
	LevelType_LevelUnKnow LevelType = 0
	LevelType_Charm       LevelType = 1
	LevelType_Fans        LevelType = 2
	LevelType_Guard       LevelType = 3
)

// Enum value maps for LevelType.
var (
	LevelType_name = map[int32]string{
		0: "LevelUnKnow",
		1: "Charm",
		2: "Fans",
		3: "Guard",
	}
	LevelType_value = map[string]int32{
		"LevelUnKnow": 0,
		"Charm":       1,
		"Fans":        2,
		"Guard":       3,
	}
)

func (x LevelType) Enum() *LevelType {
	p := new(LevelType)
	*p = x
	return p
}

func (x LevelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LevelType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[2].Descriptor()
}

func (LevelType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[2]
}

func (x LevelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LevelType.Descriptor instead.
func (LevelType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{2}
}

// 业务消息类型
type PayloadType int32

const (
	PayloadType_StreamerDm            PayloadType = 0   // 主播弹幕
	PayloadType_UserCommDm            PayloadType = 1   // 普通弹幕
	PayloadType_UserGift              PayloadType = 3   // 用户送礼
	PayloadType_UserOpenFans          PayloadType = 4   // 开通粉丝团
	PayloadType_UserOpenNoble         PayloadType = 5   // 开通贵族
	PayloadType_EnterRoom             PayloadType = 6   // 用户进入房间
	PayloadType_StreamerNotice        PayloadType = 7   // 主播公告通知
	PayloadType_UserKickRoom          PayloadType = 13  // 踢出房间
	PayloadType_StreamerOffline       PayloadType = 14  // 主播下播
	PayloadType_StreamerOnline        PayloadType = 15  // 主播开播
	PayloadType_StreamerRoomCharm     PayloadType = 16  // 主播房间魅力值变化
	PayloadType_StreamerRoomRank      PayloadType = 17  // 主播房间粉丝榜单变化
	PayloadType_UserSubscribe         PayloadType = 18  // 用户关注主播
	PayloadType_UserUnSubscribe       PayloadType = 19  // 用户取消关注主播
	PayloadType_UserForbid            PayloadType = 20  // 用户禁言
	PayloadType_UserResetForbid       PayloadType = 21  // 用户解除禁言
	PayloadType_UserRoomAdm           PayloadType = 22  // 用户房管
	PayloadType_UserRoomResetAdm      PayloadType = 23  // 用户撤销房管
	PayloadType_UserLevelUp           PayloadType = 24  // 用户等级升级
	PayloadType_StreamerCardUpdate    PayloadType = 25  // 主播名片设置
	PayloadType_UserExpChange         PayloadType = 26  // 用户经验值改变
	PayloadType_KickLogin             PayloadType = 27  // 踢出登录
	PayloadType_PlatformUserOpenNoble PayloadType = 100 // 全平台开通贵族通知
	PayloadType_PlatformUserSendGift  PayloadType = 101 // 全平台用户送礼通知
)

// Enum value maps for PayloadType.
var (
	PayloadType_name = map[int32]string{
		0:   "StreamerDm",
		1:   "UserCommDm",
		3:   "UserGift",
		4:   "UserOpenFans",
		5:   "UserOpenNoble",
		6:   "EnterRoom",
		7:   "StreamerNotice",
		13:  "UserKickRoom",
		14:  "StreamerOffline",
		15:  "StreamerOnline",
		16:  "StreamerRoomCharm",
		17:  "StreamerRoomRank",
		18:  "UserSubscribe",
		19:  "UserUnSubscribe",
		20:  "UserForbid",
		21:  "UserResetForbid",
		22:  "UserRoomAdm",
		23:  "UserRoomResetAdm",
		24:  "UserLevelUp",
		25:  "StreamerCardUpdate",
		26:  "UserExpChange",
		27:  "KickLogin",
		100: "PlatformUserOpenNoble",
		101: "PlatformUserSendGift",
	}
	PayloadType_value = map[string]int32{
		"StreamerDm":            0,
		"UserCommDm":            1,
		"UserGift":              3,
		"UserOpenFans":          4,
		"UserOpenNoble":         5,
		"EnterRoom":             6,
		"StreamerNotice":        7,
		"UserKickRoom":          13,
		"StreamerOffline":       14,
		"StreamerOnline":        15,
		"StreamerRoomCharm":     16,
		"StreamerRoomRank":      17,
		"UserSubscribe":         18,
		"UserUnSubscribe":       19,
		"UserForbid":            20,
		"UserResetForbid":       21,
		"UserRoomAdm":           22,
		"UserRoomResetAdm":      23,
		"UserLevelUp":           24,
		"StreamerCardUpdate":    25,
		"UserExpChange":         26,
		"KickLogin":             27,
		"PlatformUserOpenNoble": 100,
		"PlatformUserSendGift":  101,
	}
)

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}

func (x PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_link_payload_proto_enumTypes[3].Descriptor()
}

func (PayloadType) Type() protoreflect.EnumType {
	return &file_svc_infra_link_payload_proto_enumTypes[3]
}

func (x PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadType.Descriptor instead.
func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{3}
}

// 基础用户信息, 弹幕，送礼，进房房间开通贵族，粉丝都需要用户基础信息
type BasicUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                    // 用户UID
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                          // 昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                              // 头像地址
	IsRoomAdm     bool                   `protobuf:"varint,4,opt,name=is_room_adm,json=isRoomAdm,proto3" json:"is_room_adm,omitempty"`    // 房管
	IsSuperAdm    bool                   `protobuf:"varint,5,opt,name=is_super_adm,json=isSuperAdm,proto3" json:"is_super_adm,omitempty"` // 是否超管
	Level         int32                  `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`                               // 用户等级
	FansGroup     int32                  `protobuf:"varint,7,opt,name=fans_group,json=fansGroup,proto3" json:"fans_group,omitempty"`      // 粉丝团阶段, 0代表无粉团, 1代表初级, 2超级, 3至尊
	Noble         int32                  `protobuf:"varint,8,opt,name=noble,proto3" json:"noble,omitempty"`                               // 贵族阶段 0代表无, 1 骑士， 2子爵，3伯爵，4侯爵，5公爵，6国王
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicUser) Reset() {
	*x = BasicUser{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicUser) ProtoMessage() {}

func (x *BasicUser) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicUser.ProtoReflect.Descriptor instead.
func (*BasicUser) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{0}
}

func (x *BasicUser) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *BasicUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *BasicUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *BasicUser) GetIsRoomAdm() bool {
	if x != nil {
		return x.IsRoomAdm
	}
	return false
}

func (x *BasicUser) GetIsSuperAdm() bool {
	if x != nil {
		return x.IsSuperAdm
	}
	return false
}

func (x *BasicUser) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *BasicUser) GetFansGroup() int32 {
	if x != nil {
		return x.FansGroup
	}
	return 0
}

func (x *BasicUser) GetNoble() int32 {
	if x != nil {
		return x.Noble
	}
	return 0
}

type Sender struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`           // 用户UID
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sender) Reset() {
	*x = Sender{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sender) ProtoMessage() {}

func (x *Sender) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sender.ProtoReflect.Descriptor instead.
func (*Sender) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{1}
}

func (x *Sender) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Sender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Sender) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type Receiver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`           // 用户UID
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Receiver) Reset() {
	*x = Receiver{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Receiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receiver) ProtoMessage() {}

func (x *Receiver) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receiver.ProtoReflect.Descriptor instead.
func (*Receiver) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{2}
}

func (x *Receiver) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Receiver) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Receiver) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// /////////////////////// 消息下发 payload //////////////////////////////
// 主播弹幕
type PayloadStreamerDm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`           // 用户UID
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` // 昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像地址
	Text          string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`         // 聊天内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamerDm) Reset() {
	*x = PayloadStreamerDm{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamerDm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerDm) ProtoMessage() {}

func (x *PayloadStreamerDm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerDm.ProtoReflect.Descriptor instead.
func (*PayloadStreamerDm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{3}
}

func (x *PayloadStreamerDm) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadStreamerDm) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadStreamerDm) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PayloadStreamerDm) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 用户弹幕
type PayloadUserDm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`                    // 基础信息
	IsPaid        bool                   `protobuf:"varint,2,opt,name=is_paid,json=isPaid,proto3" json:"is_paid,omitempty"` // 是否是付费弹幕
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`                    // 聊天内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserDm) Reset() {
	*x = PayloadUserDm{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserDm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserDm) ProtoMessage() {}

func (x *PayloadUserDm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserDm.ProtoReflect.Descriptor instead.
func (*PayloadUserDm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{4}
}

func (x *PayloadUserDm) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PayloadUserDm) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *PayloadUserDm) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 用户送礼
type PayloadUserGift struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`                                          // 基础信息
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                                       // 礼物数量
	Combo         int32                  `protobuf:"varint,3,opt,name=combo,proto3" json:"combo,omitempty"`                                       // combo数
	ComboGroup    string                 `protobuf:"bytes,4,opt,name=combo_group,json=comboGroup,proto3" json:"combo_group,omitempty"`            // combo组
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                          // 礼物名称
	Icon          string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`                                          // 礼物icon
	GiftId        string                 `protobuf:"bytes,7,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`                        // 礼物ID
	IsAnimation   bool                   `protobuf:"varint,8,opt,name=is_animation,json=isAnimation,proto3" json:"is_animation,omitempty"`        // 是否动画礼物
	ComboTimeout  int32                  `protobuf:"varint,9,opt,name=combo_timeout,json=comboTimeout,proto3" json:"combo_timeout,omitempty"`     // combo延时
	ComboShowtime int32                  `protobuf:"varint,10,opt,name=combo_showtime,json=comboShowtime,proto3" json:"combo_showtime,omitempty"` // combo显示时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserGift) Reset() {
	*x = PayloadUserGift{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserGift) ProtoMessage() {}

func (x *PayloadUserGift) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserGift.ProtoReflect.Descriptor instead.
func (*PayloadUserGift) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{5}
}

func (x *PayloadUserGift) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PayloadUserGift) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PayloadUserGift) GetCombo() int32 {
	if x != nil {
		return x.Combo
	}
	return 0
}

func (x *PayloadUserGift) GetComboGroup() string {
	if x != nil {
		return x.ComboGroup
	}
	return ""
}

func (x *PayloadUserGift) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayloadUserGift) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PayloadUserGift) GetGiftId() string {
	if x != nil {
		return x.GiftId
	}
	return ""
}

func (x *PayloadUserGift) GetIsAnimation() bool {
	if x != nil {
		return x.IsAnimation
	}
	return false
}

func (x *PayloadUserGift) GetComboTimeout() int32 {
	if x != nil {
		return x.ComboTimeout
	}
	return 0
}

func (x *PayloadUserGift) GetComboShowtime() int32 {
	if x != nil {
		return x.ComboShowtime
	}
	return 0
}

// 用户开通粉丝团
type PayloadOpenFansGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`  // 基础信息
	Rank          int64                  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"` // 开通的排名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadOpenFansGroup) Reset() {
	*x = PayloadOpenFansGroup{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadOpenFansGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadOpenFansGroup) ProtoMessage() {}

func (x *PayloadOpenFansGroup) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadOpenFansGroup.ProtoReflect.Descriptor instead.
func (*PayloadOpenFansGroup) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{6}
}

func (x *PayloadOpenFansGroup) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PayloadOpenFansGroup) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// 用户开通贵族
type PayloadOpenNoble struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadOpenNoble) Reset() {
	*x = PayloadOpenNoble{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadOpenNoble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadOpenNoble) ProtoMessage() {}

func (x *PayloadOpenNoble) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadOpenNoble.ProtoReflect.Descriptor instead.
func (*PayloadOpenNoble) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{7}
}

func (x *PayloadOpenNoble) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 用户进入房间
type PayloadEnterRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadEnterRoom) Reset() {
	*x = PayloadEnterRoom{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadEnterRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadEnterRoom) ProtoMessage() {}

func (x *PayloadEnterRoom) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadEnterRoom.ProtoReflect.Descriptor instead.
func (*PayloadEnterRoom) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{8}
}

func (x *PayloadEnterRoom) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 主播房间公告
type PayloadStreamNotice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 公告内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamNotice) Reset() {
	*x = PayloadStreamNotice{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamNotice) ProtoMessage() {}

func (x *PayloadStreamNotice) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamNotice.ProtoReflect.Descriptor instead.
func (*PayloadStreamNotice) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{9}
}

func (x *PayloadStreamNotice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 主播开播
type PayloadStreamerStartLive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamerStartLive) Reset() {
	*x = PayloadStreamerStartLive{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamerStartLive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerStartLive) ProtoMessage() {}

func (x *PayloadStreamerStartLive) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerStartLive.ProtoReflect.Descriptor instead.
func (*PayloadStreamerStartLive) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{10}
}

// 主播下播
type PayloadStreamerOffline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Forbid        string                 `protobuf:"bytes,1,opt,name=forbid,proto3" json:"forbid,omitempty"` // 被封禁下播的原因, 为空说明正常下播
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamerOffline) Reset() {
	*x = PayloadStreamerOffline{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamerOffline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerOffline) ProtoMessage() {}

func (x *PayloadStreamerOffline) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerOffline.ProtoReflect.Descriptor instead.
func (*PayloadStreamerOffline) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{11}
}

func (x *PayloadStreamerOffline) GetForbid() string {
	if x != nil {
		return x.Forbid
	}
	return ""
}

// 主播房间魅力值变化
type PayloadStreamerRoomCharm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Charm         int64                  `protobuf:"varint,1,opt,name=charm,proto3" json:"charm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamerRoomCharm) Reset() {
	*x = PayloadStreamerRoomCharm{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamerRoomCharm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerRoomCharm) ProtoMessage() {}

func (x *PayloadStreamerRoomCharm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerRoomCharm.ProtoReflect.Descriptor instead.
func (*PayloadStreamerRoomCharm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{12}
}

func (x *PayloadStreamerRoomCharm) GetCharm() int64 {
	if x != nil {
		return x.Charm
	}
	return 0
}

// 主播房间粉丝榜单变化
type PayloadStreamerRoomRank struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Ranks         []*PayloadStreamerRoomRank_RoomRank `protobuf:"bytes,1,rep,name=ranks,proto3" json:"ranks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamerRoomRank) Reset() {
	*x = PayloadStreamerRoomRank{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamerRoomRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerRoomRank) ProtoMessage() {}

func (x *PayloadStreamerRoomRank) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerRoomRank.ProtoReflect.Descriptor instead.
func (*PayloadStreamerRoomRank) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{13}
}

func (x *PayloadStreamerRoomRank) GetRanks() []*PayloadStreamerRoomRank_RoomRank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

// 用户等级升级
type PayloadUserLevelUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserLevelUp) Reset() {
	*x = PayloadUserLevelUp{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserLevelUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserLevelUp) ProtoMessage() {}

func (x *PayloadUserLevelUp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserLevelUp.ProtoReflect.Descriptor instead.
func (*PayloadUserLevelUp) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{14}
}

func (x *PayloadUserLevelUp) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 用户关注主播
type PayloadUserSubUnSubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserSubUnSubscribe) Reset() {
	*x = PayloadUserSubUnSubscribe{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserSubUnSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserSubUnSubscribe) ProtoMessage() {}

func (x *PayloadUserSubUnSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserSubUnSubscribe.ProtoReflect.Descriptor instead.
func (*PayloadUserSubUnSubscribe) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{15}
}

func (x *PayloadUserSubUnSubscribe) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 用户被踢出房间
type PayloadUserKickRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserKickRoom) Reset() {
	*x = PayloadUserKickRoom{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserKickRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserKickRoom) ProtoMessage() {}

func (x *PayloadUserKickRoom) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserKickRoom.ProtoReflect.Descriptor instead.
func (*PayloadUserKickRoom) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{16}
}

func (x *PayloadUserKickRoom) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 用户被禁言
type PayloadUserForbid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserForbid) Reset() {
	*x = PayloadUserForbid{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserForbid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserForbid) ProtoMessage() {}

func (x *PayloadUserForbid) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserForbid.ProtoReflect.Descriptor instead.
func (*PayloadUserForbid) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{17}
}

func (x *PayloadUserForbid) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 用户被设置成房管
type PayloadUserRoomAdm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserRoomAdm) Reset() {
	*x = PayloadUserRoomAdm{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserRoomAdm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserRoomAdm) ProtoMessage() {}

func (x *PayloadUserRoomAdm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserRoomAdm.ProtoReflect.Descriptor instead.
func (*PayloadUserRoomAdm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{18}
}

func (x *PayloadUserRoomAdm) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 用户被取消房管
type PayloadUserRoomCancelAdm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // 基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserRoomCancelAdm) Reset() {
	*x = PayloadUserRoomCancelAdm{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserRoomCancelAdm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserRoomCancelAdm) ProtoMessage() {}

func (x *PayloadUserRoomCancelAdm) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserRoomCancelAdm.ProtoReflect.Descriptor instead.
func (*PayloadUserRoomCancelAdm) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{19}
}

func (x *PayloadUserRoomCancelAdm) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

// 主播名片更新
type PayloadStreamerCardUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Remark        string                 `protobuf:"bytes,1,opt,name=remark,proto3" json:"remark,omitempty"`    // 备注说名
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`   // 收费标准
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`        // 展示内容
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"` // 开启状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamerCardUpdate) Reset() {
	*x = PayloadStreamerCardUpdate{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamerCardUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerCardUpdate) ProtoMessage() {}

func (x *PayloadStreamerCardUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerCardUpdate.ProtoReflect.Descriptor instead.
func (*PayloadStreamerCardUpdate) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{20}
}

func (x *PayloadStreamerCardUpdate) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PayloadStreamerCardUpdate) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PayloadStreamerCardUpdate) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PayloadStreamerCardUpdate) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// 用户经验值变更
type PayloadUserExpChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentLevel  int32                  `protobuf:"varint,1,opt,name=current_level,json=currentLevel,proto3" json:"current_level,omitempty"` // 当前等级
	NextLevel     int32                  `protobuf:"varint,2,opt,name=next_level,json=nextLevel,proto3" json:"next_level,omitempty"`          // 下一级
	CurrentValue  int32                  `protobuf:"varint,3,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"` // 当前经验值
	NextValue     int32                  `protobuf:"varint,4,opt,name=next_value,json=nextValue,proto3" json:"next_value,omitempty"`          // 下一级需要的经验值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadUserExpChange) Reset() {
	*x = PayloadUserExpChange{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadUserExpChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadUserExpChange) ProtoMessage() {}

func (x *PayloadUserExpChange) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadUserExpChange.ProtoReflect.Descriptor instead.
func (*PayloadUserExpChange) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{21}
}

func (x *PayloadUserExpChange) GetCurrentLevel() int32 {
	if x != nil {
		return x.CurrentLevel
	}
	return 0
}

func (x *PayloadUserExpChange) GetNextLevel() int32 {
	if x != nil {
		return x.NextLevel
	}
	return 0
}

func (x *PayloadUserExpChange) GetCurrentValue() int32 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *PayloadUserExpChange) GetNextValue() int32 {
	if x != nil {
		return x.NextValue
	}
	return 0
}

// 踢出登录
type PayloadKickLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flag          int32                  `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"` // 标识
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 下线一些原因或者其它显示的消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadKickLogin) Reset() {
	*x = PayloadKickLogin{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadKickLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadKickLogin) ProtoMessage() {}

func (x *PayloadKickLogin) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadKickLogin.ProtoReflect.Descriptor instead.
func (*PayloadKickLogin) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{22}
}

func (x *PayloadKickLogin) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *PayloadKickLogin) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 平台开通贵族通知
type PayloadPlatformUserOpenNoble struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Sender                `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`     // 发送者基础信息
	Receiver      *Receiver              `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"` //  接收者信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadPlatformUserOpenNoble) Reset() {
	*x = PayloadPlatformUserOpenNoble{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadPlatformUserOpenNoble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadPlatformUserOpenNoble) ProtoMessage() {}

func (x *PayloadPlatformUserOpenNoble) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadPlatformUserOpenNoble.ProtoReflect.Descriptor instead.
func (*PayloadPlatformUserOpenNoble) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{23}
}

func (x *PayloadPlatformUserOpenNoble) GetSender() *Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *PayloadPlatformUserOpenNoble) GetReceiver() *Receiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

// 平台礼物通知
type PayloadPlatformUserSendGift struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Sender                `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`     // 发送者基础信息
	Receiver      *Receiver              `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"` //  接收者信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadPlatformUserSendGift) Reset() {
	*x = PayloadPlatformUserSendGift{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadPlatformUserSendGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadPlatformUserSendGift) ProtoMessage() {}

func (x *PayloadPlatformUserSendGift) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadPlatformUserSendGift.ProtoReflect.Descriptor instead.
func (*PayloadPlatformUserSendGift) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{24}
}

func (x *PayloadPlatformUserSendGift) GetSender() *Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *PayloadPlatformUserSendGift) GetReceiver() *Receiver {
	if x != nil {
		return x.Receiver
	}
	return nil
}

type PayloadStreamerRoomRank_RoomRank struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rank          int64                  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Uid           string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname      string                 `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar        string                 `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadStreamerRoomRank_RoomRank) Reset() {
	*x = PayloadStreamerRoomRank_RoomRank{}
	mi := &file_svc_infra_link_payload_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStreamerRoomRank_RoomRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStreamerRoomRank_RoomRank) ProtoMessage() {}

func (x *PayloadStreamerRoomRank_RoomRank) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_link_payload_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStreamerRoomRank_RoomRank.ProtoReflect.Descriptor instead.
func (*PayloadStreamerRoomRank_RoomRank) Descriptor() ([]byte, []int) {
	return file_svc_infra_link_payload_proto_rawDescGZIP(), []int{13, 0}
}

func (x *PayloadStreamerRoomRank_RoomRank) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PayloadStreamerRoomRank_RoomRank) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PayloadStreamerRoomRank_RoomRank) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PayloadStreamerRoomRank_RoomRank) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

var File_svc_infra_link_payload_proto protoreflect.FileDescriptor

var file_svc_infra_link_payload_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0xde,
	0x01, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x61, 0x64,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x41,
	0x64, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x41, 0x64, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61,
	0x6e, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x61, 0x6e, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x62,
	0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x6f, 0x62, 0x6c, 0x65, 0x22,
	0x4e, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22,
	0x50, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x22, 0x6d, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x65, 0x72, 0x44, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x6b, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x6d, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xbd, 0x02,
	0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66,
	0x74, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x59, 0x0a,
	0x14, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x61, 0x6e, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x41, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x10, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x29,
	0x0a, 0x13, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4c, 0x69, 0x76, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x6d, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x46, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x1a, 0x64, 0x0a,
	0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x22, 0x43, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x2d, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x11, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x12,
	0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x43,
	0x0a, 0x12, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x6d, 0x41, 0x64, 0x6d, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x12,
	0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x79,
	0x0a, 0x19, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x14, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x70, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x69, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x1c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e,
	0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x1b,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x2a, 0x38, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x10, 0x0a,
	0x12, 0x09, 0x0a, 0x05, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x10, 0x64, 0x2a, 0x31, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e,
	0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x10, 0x0a, 0x2a, 0x3c,
	0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x68, 0x61, 0x72, 0x6d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x61, 0x6e, 0x73, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x75, 0x61, 0x72, 0x64, 0x10, 0x03, 0x2a, 0xdf, 0x03, 0x0a,
	0x0b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x44, 0x6d, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x44, 0x6d, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x61, 0x6e, 0x73, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x06, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x6f,
	0x6f, 0x6d, 0x10, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x0f, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x72, 0x6d, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x12, 0x12, 0x13, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x10, 0x13, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x65, 0x74, 0x46,
	0x6f, 0x72, 0x62, 0x69, 0x64, 0x10, 0x15, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x10, 0x16, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x10, 0x17, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x10, 0x18, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x19, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x1a, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x69,
	0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x1b, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x6f, 0x62,
	0x6c, 0x65, 0x10, 0x64, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x10, 0x65, 0x42, 0x17,
	0x5a, 0x15, 0x2e, 0x2f, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x3b, 0x6c, 0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_infra_link_payload_proto_rawDescOnce sync.Once
	file_svc_infra_link_payload_proto_rawDescData = file_svc_infra_link_payload_proto_rawDesc
)

func file_svc_infra_link_payload_proto_rawDescGZIP() []byte {
	file_svc_infra_link_payload_proto_rawDescOnce.Do(func() {
		file_svc_infra_link_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_infra_link_payload_proto_rawDescData)
	})
	return file_svc_infra_link_payload_proto_rawDescData
}

var file_svc_infra_link_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_svc_infra_link_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_svc_infra_link_payload_proto_goTypes = []any{
	(PriorityType)(0),                        // 0: svc.infra.link.PriorityType
	(CommandType)(0),                         // 1: svc.infra.link.CommandType
	(LevelType)(0),                           // 2: svc.infra.link.LevelType
	(PayloadType)(0),                         // 3: svc.infra.link.PayloadType
	(*BasicUser)(nil),                        // 4: svc.infra.link.BasicUser
	(*Sender)(nil),                           // 5: svc.infra.link.Sender
	(*Receiver)(nil),                         // 6: svc.infra.link.Receiver
	(*PayloadStreamerDm)(nil),                // 7: svc.infra.link.PayloadStreamerDm
	(*PayloadUserDm)(nil),                    // 8: svc.infra.link.PayloadUserDm
	(*PayloadUserGift)(nil),                  // 9: svc.infra.link.PayloadUserGift
	(*PayloadOpenFansGroup)(nil),             // 10: svc.infra.link.PayloadOpenFansGroup
	(*PayloadOpenNoble)(nil),                 // 11: svc.infra.link.PayloadOpenNoble
	(*PayloadEnterRoom)(nil),                 // 12: svc.infra.link.PayloadEnterRoom
	(*PayloadStreamNotice)(nil),              // 13: svc.infra.link.PayloadStreamNotice
	(*PayloadStreamerStartLive)(nil),         // 14: svc.infra.link.PayloadStreamerStartLive
	(*PayloadStreamerOffline)(nil),           // 15: svc.infra.link.PayloadStreamerOffline
	(*PayloadStreamerRoomCharm)(nil),         // 16: svc.infra.link.PayloadStreamerRoomCharm
	(*PayloadStreamerRoomRank)(nil),          // 17: svc.infra.link.PayloadStreamerRoomRank
	(*PayloadUserLevelUp)(nil),               // 18: svc.infra.link.PayloadUserLevelUp
	(*PayloadUserSubUnSubscribe)(nil),        // 19: svc.infra.link.PayloadUserSubUnSubscribe
	(*PayloadUserKickRoom)(nil),              // 20: svc.infra.link.PayloadUserKickRoom
	(*PayloadUserForbid)(nil),                // 21: svc.infra.link.PayloadUserForbid
	(*PayloadUserRoomAdm)(nil),               // 22: svc.infra.link.PayloadUserRoomAdm
	(*PayloadUserRoomCancelAdm)(nil),         // 23: svc.infra.link.PayloadUserRoomCancelAdm
	(*PayloadStreamerCardUpdate)(nil),        // 24: svc.infra.link.PayloadStreamerCardUpdate
	(*PayloadUserExpChange)(nil),             // 25: svc.infra.link.PayloadUserExpChange
	(*PayloadKickLogin)(nil),                 // 26: svc.infra.link.PayloadKickLogin
	(*PayloadPlatformUserOpenNoble)(nil),     // 27: svc.infra.link.PayloadPlatformUserOpenNoble
	(*PayloadPlatformUserSendGift)(nil),      // 28: svc.infra.link.PayloadPlatformUserSendGift
	(*PayloadStreamerRoomRank_RoomRank)(nil), // 29: svc.infra.link.PayloadStreamerRoomRank.RoomRank
}
var file_svc_infra_link_payload_proto_depIdxs = []int32{
	4,  // 0: svc.infra.link.PayloadUserDm.user:type_name -> svc.infra.link.BasicUser
	4,  // 1: svc.infra.link.PayloadUserGift.user:type_name -> svc.infra.link.BasicUser
	4,  // 2: svc.infra.link.PayloadOpenFansGroup.user:type_name -> svc.infra.link.BasicUser
	4,  // 3: svc.infra.link.PayloadOpenNoble.user:type_name -> svc.infra.link.BasicUser
	4,  // 4: svc.infra.link.PayloadEnterRoom.user:type_name -> svc.infra.link.BasicUser
	29, // 5: svc.infra.link.PayloadStreamerRoomRank.ranks:type_name -> svc.infra.link.PayloadStreamerRoomRank.RoomRank
	4,  // 6: svc.infra.link.PayloadUserLevelUp.user:type_name -> svc.infra.link.BasicUser
	4,  // 7: svc.infra.link.PayloadUserSubUnSubscribe.user:type_name -> svc.infra.link.BasicUser
	4,  // 8: svc.infra.link.PayloadUserKickRoom.user:type_name -> svc.infra.link.BasicUser
	4,  // 9: svc.infra.link.PayloadUserForbid.user:type_name -> svc.infra.link.BasicUser
	4,  // 10: svc.infra.link.PayloadUserRoomAdm.user:type_name -> svc.infra.link.BasicUser
	4,  // 11: svc.infra.link.PayloadUserRoomCancelAdm.user:type_name -> svc.infra.link.BasicUser
	5,  // 12: svc.infra.link.PayloadPlatformUserOpenNoble.sender:type_name -> svc.infra.link.Sender
	6,  // 13: svc.infra.link.PayloadPlatformUserOpenNoble.receiver:type_name -> svc.infra.link.Receiver
	5,  // 14: svc.infra.link.PayloadPlatformUserSendGift.sender:type_name -> svc.infra.link.Sender
	6,  // 15: svc.infra.link.PayloadPlatformUserSendGift.receiver:type_name -> svc.infra.link.Receiver
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_svc_infra_link_payload_proto_init() }
func file_svc_infra_link_payload_proto_init() {
	if File_svc_infra_link_payload_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_infra_link_payload_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svc_infra_link_payload_proto_goTypes,
		DependencyIndexes: file_svc_infra_link_payload_proto_depIdxs,
		EnumInfos:         file_svc_infra_link_payload_proto_enumTypes,
		MessageInfos:      file_svc_infra_link_payload_proto_msgTypes,
	}.Build()
	File_svc_infra_link_payload_proto = out.File
	file_svc_infra_link_payload_proto_rawDesc = nil
	file_svc_infra_link_payload_proto_goTypes = nil
	file_svc_infra_link_payload_proto_depIdxs = nil
}
