// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v5.27.0--rc1
// source: svc.infra.notifier/notifier.proto

package notifier

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitDBResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *InitDBResp) Reset() {
	*x = InitDBResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitDBResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitDBResp) ProtoMessage() {}

func (x *InitDBResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitDBResp.ProtoReflect.Descriptor instead.
func (*InitDBResp) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{0}
}

func (x *InitDBResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// CommonResponse
type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // code
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // message
	// Types that are assignable to Id:
	//
	//	*CommonResponse_Uuid
	//	*CommonResponse_Lid
	Id isCommonResponse_Id `protobuf_oneof:"id"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{1}
}

func (x *CommonResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *CommonResponse) GetId() isCommonResponse_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *CommonResponse) GetUuid() string {
	if x, ok := x.GetId().(*CommonResponse_Uuid); ok {
		return x.Uuid
	}
	return ""
}

func (x *CommonResponse) GetLid() int64 {
	if x, ok := x.GetId().(*CommonResponse_Lid); ok {
		return x.Lid
	}
	return 0
}

type isCommonResponse_Id interface {
	isCommonResponse_Id()
}

type CommonResponse_Uuid struct {
	Uuid string `protobuf:"bytes,3,opt,name=uuid,proto3,oneof"` // ID
}

type CommonResponse_Lid struct {
	Lid int64 `protobuf:"varint,4,opt,name=lid,proto3,oneof"`
}

func (*CommonResponse_Uuid) isCommonResponse_Id() {}

func (*CommonResponse_Lid) isCommonResponse_Id() {}

type SmsChannelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size      int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Name      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *SmsChannelListRequest) Reset() {
	*x = SmsChannelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsChannelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsChannelListRequest) ProtoMessage() {}

func (x *SmsChannelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsChannelListRequest.ProtoReflect.Descriptor instead.
func (*SmsChannelListRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{2}
}

func (x *SmsChannelListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SmsChannelListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SmsChannelListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SmsChannelListRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SmsChannelListRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type SmsChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope      int64                  `protobuf:"varint,2,opt,name=scope,proto3" json:"scope,omitempty"`
	MerchantId string                 `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Channel    string                 `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	AccessId   string                 `protobuf:"bytes,5,opt,name=access_id,json=accessId,proto3" json:"access_id,omitempty"`
	AccessKey  string                 `protobuf:"bytes,6,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	Status     int32                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	IsPlatform bool                   `protobuf:"varint,8,opt,name=is_platform,json=isPlatform,proto3" json:"is_platform,omitempty"`
	Creator    string                 `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *SmsChannel) Reset() {
	*x = SmsChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsChannel) ProtoMessage() {}

func (x *SmsChannel) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsChannel.ProtoReflect.Descriptor instead.
func (*SmsChannel) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{3}
}

func (x *SmsChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SmsChannel) GetScope() int64 {
	if x != nil {
		return x.Scope
	}
	return 0
}

func (x *SmsChannel) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *SmsChannel) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SmsChannel) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *SmsChannel) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *SmsChannel) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SmsChannel) GetIsPlatform() bool {
	if x != nil {
		return x.IsPlatform
	}
	return false
}

func (x *SmsChannel) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *SmsChannel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SmsChannelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnt  int64         `protobuf:"varint,1,opt,name=cnt,proto3" json:"cnt,omitempty"`
	List []*SmsChannel `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SmsChannelListResponse) Reset() {
	*x = SmsChannelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsChannelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsChannelListResponse) ProtoMessage() {}

func (x *SmsChannelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsChannelListResponse.ProtoReflect.Descriptor instead.
func (*SmsChannelListResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{4}
}

func (x *SmsChannelListResponse) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

func (x *SmsChannelListResponse) GetList() []*SmsChannel {
	if x != nil {
		return x.List
	}
	return nil
}

type CreatedSmsChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope      int64  `protobuf:"varint,2,opt,name=scope,proto3" json:"scope,omitempty"`
	MerchantId string `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Channel    string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	AccessId   string `protobuf:"bytes,5,opt,name=access_id,json=accessId,proto3" json:"access_id,omitempty"`
	AccessKey  string `protobuf:"bytes,6,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	Status     int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	IsPlatform bool   `protobuf:"varint,8,opt,name=is_platform,json=isPlatform,proto3" json:"is_platform,omitempty"`
	Creator    string `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *CreatedSmsChannelRequest) Reset() {
	*x = CreatedSmsChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedSmsChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedSmsChannelRequest) ProtoMessage() {}

func (x *CreatedSmsChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedSmsChannelRequest.ProtoReflect.Descriptor instead.
func (*CreatedSmsChannelRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{5}
}

func (x *CreatedSmsChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatedSmsChannelRequest) GetScope() int64 {
	if x != nil {
		return x.Scope
	}
	return 0
}

func (x *CreatedSmsChannelRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreatedSmsChannelRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CreatedSmsChannelRequest) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *CreatedSmsChannelRequest) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *CreatedSmsChannelRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreatedSmsChannelRequest) GetIsPlatform() bool {
	if x != nil {
		return x.IsPlatform
	}
	return false
}

func (x *CreatedSmsChannelRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type UpdatedSmsChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Scope     int64  `protobuf:"varint,3,opt,name=scope,proto3" json:"scope,omitempty"`
	AccessId  string `protobuf:"bytes,4,opt,name=access_id,json=accessId,proto3" json:"access_id,omitempty"`
	AccessKey string `protobuf:"bytes,5,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	Status    int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdatedSmsChannelRequest) Reset() {
	*x = UpdatedSmsChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedSmsChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedSmsChannelRequest) ProtoMessage() {}

func (x *UpdatedSmsChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedSmsChannelRequest.ProtoReflect.Descriptor instead.
func (*UpdatedSmsChannelRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatedSmsChannelRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatedSmsChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatedSmsChannelRequest) GetScope() int64 {
	if x != nil {
		return x.Scope
	}
	return 0
}

func (x *UpdatedSmsChannelRequest) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *UpdatedSmsChannelRequest) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *UpdatedSmsChannelRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DeletedSmsChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletedSmsChannelRequest) Reset() {
	*x = DeletedSmsChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedSmsChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedSmsChannelRequest) ProtoMessage() {}

func (x *DeletedSmsChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedSmsChannelRequest.ProtoReflect.Descriptor instead.
func (*DeletedSmsChannelRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{7}
}

func (x *DeletedSmsChannelRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SmsTemplateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size      int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ChannelId string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *SmsTemplateListRequest) Reset() {
	*x = SmsTemplateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsTemplateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsTemplateListRequest) ProtoMessage() {}

func (x *SmsTemplateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsTemplateListRequest.ProtoReflect.Descriptor instead.
func (*SmsTemplateListRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{8}
}

func (x *SmsTemplateListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SmsTemplateListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SmsTemplateListRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SmsTemplateListRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SmsTemplateListRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type SmsTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId string      `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	ChannelId  string      `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	SmsChannel *SmsChannel `protobuf:"bytes,4,opt,name=sms_channel,json=smsChannel,proto3" json:"sms_channel,omitempty"`
	SignName   string      `protobuf:"bytes,5,opt,name=sign_name,json=signName,proto3" json:"sign_name,omitempty"`
	CodeKey    string      `protobuf:"bytes,6,opt,name=code_key,json=codeKey,proto3" json:"code_key,omitempty"`
	// 没有绑定，需要绑定外部发送
	ExternalCodeKey string `protobuf:"bytes,7,opt,name=external_code_key,json=externalCodeKey,proto3" json:"external_code_key,omitempty"`
	TemplateName    string `protobuf:"bytes,8,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	TemplateType    string `protobuf:"bytes,9,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	Params          string `protobuf:"bytes,10,opt,name=params,proto3" json:"params,omitempty"`
	Content         string `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`
	Remark          string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	IsSystem        string `protobuf:"bytes,13,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	Creator         string `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *SmsTemplate) Reset() {
	*x = SmsTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsTemplate) ProtoMessage() {}

func (x *SmsTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsTemplate.ProtoReflect.Descriptor instead.
func (*SmsTemplate) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{9}
}

func (x *SmsTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SmsTemplate) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *SmsTemplate) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SmsTemplate) GetSmsChannel() *SmsChannel {
	if x != nil {
		return x.SmsChannel
	}
	return nil
}

func (x *SmsTemplate) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

func (x *SmsTemplate) GetCodeKey() string {
	if x != nil {
		return x.CodeKey
	}
	return ""
}

func (x *SmsTemplate) GetExternalCodeKey() string {
	if x != nil {
		return x.ExternalCodeKey
	}
	return ""
}

func (x *SmsTemplate) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *SmsTemplate) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *SmsTemplate) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *SmsTemplate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SmsTemplate) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SmsTemplate) GetIsSystem() string {
	if x != nil {
		return x.IsSystem
	}
	return ""
}

func (x *SmsTemplate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type SmsTemplateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnt  int64          `protobuf:"varint,1,opt,name=cnt,proto3" json:"cnt,omitempty"`
	List []*SmsTemplate `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SmsTemplateListResponse) Reset() {
	*x = SmsTemplateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsTemplateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsTemplateListResponse) ProtoMessage() {}

func (x *SmsTemplateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsTemplateListResponse.ProtoReflect.Descriptor instead.
func (*SmsTemplateListResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{10}
}

func (x *SmsTemplateListResponse) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

func (x *SmsTemplateListResponse) GetList() []*SmsTemplate {
	if x != nil {
		return x.List
	}
	return nil
}

type CreatedSmsTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	ChannelId  string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	SignName   string `protobuf:"bytes,3,opt,name=sign_name,json=signName,proto3" json:"sign_name,omitempty"`
	CodeKey    string `protobuf:"bytes,4,opt,name=code_key,json=codeKey,proto3" json:"code_key,omitempty"`
	// 没有绑定，需要绑定外部发送
	ExternalCodeKey string `protobuf:"bytes,5,opt,name=external_code_key,json=externalCodeKey,proto3" json:"external_code_key,omitempty"`
	TemplateName    string `protobuf:"bytes,6,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	TemplateType    string `protobuf:"bytes,7,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	Params          string `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	Content         string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	Remark          string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	IsSystem        string `protobuf:"bytes,11,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	Creator         string `protobuf:"bytes,12,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *CreatedSmsTemplateRequest) Reset() {
	*x = CreatedSmsTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedSmsTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedSmsTemplateRequest) ProtoMessage() {}

func (x *CreatedSmsTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedSmsTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreatedSmsTemplateRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{11}
}

func (x *CreatedSmsTemplateRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetCodeKey() string {
	if x != nil {
		return x.CodeKey
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetExternalCodeKey() string {
	if x != nil {
		return x.ExternalCodeKey
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetIsSystem() string {
	if x != nil {
		return x.IsSystem
	}
	return ""
}

func (x *CreatedSmsTemplateRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// UpdatedSmsTemplateRequest 绑定操作
type UpdatedSmsTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId       string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ExternalCodeKey string `protobuf:"bytes,3,opt,name=external_code_key,json=externalCodeKey,proto3" json:"external_code_key,omitempty"`
	Remark          string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	TemplateName    string `protobuf:"bytes,6,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	TemplateType    string `protobuf:"bytes,7,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	Params          string `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	Content         string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UpdatedSmsTemplateRequest) Reset() {
	*x = UpdatedSmsTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedSmsTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedSmsTemplateRequest) ProtoMessage() {}

func (x *UpdatedSmsTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedSmsTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdatedSmsTemplateRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatedSmsTemplateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatedSmsTemplateRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpdatedSmsTemplateRequest) GetExternalCodeKey() string {
	if x != nil {
		return x.ExternalCodeKey
	}
	return ""
}

func (x *UpdatedSmsTemplateRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdatedSmsTemplateRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *UpdatedSmsTemplateRequest) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *UpdatedSmsTemplateRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *UpdatedSmsTemplateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeletedSmsTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletedSmsTemplateRequest) Reset() {
	*x = DeletedSmsTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedSmsTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedSmsTemplateRequest) ProtoMessage() {}

func (x *DeletedSmsTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedSmsTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeletedSmsTemplateRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{13}
}

func (x *DeletedSmsTemplateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// //////// biz sms send /////////////
type SmsBizSendLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TemplateId  int64                  `protobuf:"varint,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	ChannelId   int64                  `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	BizType     int64                  `protobuf:"varint,4,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	Content     string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	UserSet     int32                  `protobuf:"varint,6,opt,name=user_set,json=userSet,proto3" json:"user_set,omitempty"`
	SendUserCnt int64                  `protobuf:"varint,7,opt,name=send_user_cnt,json=sendUserCnt,proto3" json:"send_user_cnt,omitempty"`
	SendOkCnt   int64                  `protobuf:"varint,8,opt,name=send_ok_cnt,json=sendOkCnt,proto3" json:"send_ok_cnt,omitempty"`
	IsCompleted bool                   `protobuf:"varint,9,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	Remark      string                 `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	Creator     string                 `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *SmsBizSendLog) Reset() {
	*x = SmsBizSendLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsBizSendLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsBizSendLog) ProtoMessage() {}

func (x *SmsBizSendLog) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsBizSendLog.ProtoReflect.Descriptor instead.
func (*SmsBizSendLog) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{14}
}

func (x *SmsBizSendLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SmsBizSendLog) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *SmsBizSendLog) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *SmsBizSendLog) GetBizType() int64 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *SmsBizSendLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SmsBizSendLog) GetUserSet() int32 {
	if x != nil {
		return x.UserSet
	}
	return 0
}

func (x *SmsBizSendLog) GetSendUserCnt() int64 {
	if x != nil {
		return x.SendUserCnt
	}
	return 0
}

func (x *SmsBizSendLog) GetSendOkCnt() int64 {
	if x != nil {
		return x.SendOkCnt
	}
	return 0
}

func (x *SmsBizSendLog) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *SmsBizSendLog) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SmsBizSendLog) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *SmsBizSendLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SmsBizSendLog) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SmsBizSendLogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size       int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	TemplateId int64                  `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	BizType    int32                  `protobuf:"varint,4,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	MerchantId string                 `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *SmsBizSendLogListRequest) Reset() {
	*x = SmsBizSendLogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsBizSendLogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsBizSendLogListRequest) ProtoMessage() {}

func (x *SmsBizSendLogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsBizSendLogListRequest.ProtoReflect.Descriptor instead.
func (*SmsBizSendLogListRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{15}
}

func (x *SmsBizSendLogListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SmsBizSendLogListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SmsBizSendLogListRequest) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *SmsBizSendLogListRequest) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *SmsBizSendLogListRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *SmsBizSendLogListRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SmsBizSendLogListRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type SmsBizSendLogListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnt  int64                                      `protobuf:"varint,1,opt,name=cnt,proto3" json:"cnt,omitempty"`
	List []*SmsBizSendLogListResponse_SmsBizSendLog `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SmsBizSendLogListResponse) Reset() {
	*x = SmsBizSendLogListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsBizSendLogListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsBizSendLogListResponse) ProtoMessage() {}

func (x *SmsBizSendLogListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsBizSendLogListResponse.ProtoReflect.Descriptor instead.
func (*SmsBizSendLogListResponse) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{16}
}

func (x *SmsBizSendLogListResponse) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

func (x *SmsBizSendLogListResponse) GetList() []*SmsBizSendLogListResponse_SmsBizSendLog {
	if x != nil {
		return x.List
	}
	return nil
}

type CreatedSmsBizSendLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmsTemplateId int64  `protobuf:"varint,1,opt,name=sms_template_id,json=smsTemplateId,proto3" json:"sms_template_id,omitempty"`
	Params        string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	UserSet       int32  `protobuf:"varint,3,opt,name=user_set,json=userSet,proto3" json:"user_set,omitempty"`
	Remark        string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreatedSmsBizSendLogRequest) Reset() {
	*x = CreatedSmsBizSendLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedSmsBizSendLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedSmsBizSendLogRequest) ProtoMessage() {}

func (x *CreatedSmsBizSendLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedSmsBizSendLogRequest.ProtoReflect.Descriptor instead.
func (*CreatedSmsBizSendLogRequest) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{17}
}

func (x *CreatedSmsBizSendLogRequest) GetSmsTemplateId() int64 {
	if x != nil {
		return x.SmsTemplateId
	}
	return 0
}

func (x *CreatedSmsBizSendLogRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *CreatedSmsBizSendLogRequest) GetUserSet() int32 {
	if x != nil {
		return x.UserSet
	}
	return 0
}

func (x *CreatedSmsBizSendLogRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SmsBizSendLogListResponse_SmsBizSendLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmsBizSendLog *SmsBizSendLogListResponse_SmsBizSendLog `protobuf:"bytes,1,opt,name=sms_biz_send_log,json=smsBizSendLog,proto3" json:"sms_biz_send_log,omitempty"`
	SmsTemplate   *SmsTemplate                             `protobuf:"bytes,2,opt,name=sms_template,json=smsTemplate,proto3" json:"sms_template,omitempty"`
	SmsChannel    *SmsChannel                              `protobuf:"bytes,3,opt,name=sms_channel,json=smsChannel,proto3" json:"sms_channel,omitempty"`
}

func (x *SmsBizSendLogListResponse_SmsBizSendLog) Reset() {
	*x = SmsBizSendLogListResponse_SmsBizSendLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_notifier_notifier_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsBizSendLogListResponse_SmsBizSendLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsBizSendLogListResponse_SmsBizSendLog) ProtoMessage() {}

func (x *SmsBizSendLogListResponse_SmsBizSendLog) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_notifier_notifier_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsBizSendLogListResponse_SmsBizSendLog.ProtoReflect.Descriptor instead.
func (*SmsBizSendLogListResponse_SmsBizSendLog) Descriptor() ([]byte, []int) {
	return file_svc_infra_notifier_notifier_proto_rawDescGZIP(), []int{16, 0}
}

func (x *SmsBizSendLogListResponse_SmsBizSendLog) GetSmsBizSendLog() *SmsBizSendLogListResponse_SmsBizSendLog {
	if x != nil {
		return x.SmsBizSendLog
	}
	return nil
}

func (x *SmsBizSendLogListResponse_SmsBizSendLog) GetSmsTemplate() *SmsTemplate {
	if x != nil {
		return x.SmsTemplate
	}
	return nil
}

func (x *SmsBizSendLogListResponse_SmsBizSendLog) GetSmsChannel() *SmsChannel {
	if x != nil {
		return x.SmsChannel
	}
	return nil
}

var File_svc_infra_notifier_notifier_proto protoreflect.FileDescriptor

var file_svc_infra_notifier_notifier_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x42, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6e, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x03, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x03, 0x6c, 0x69, 0x64, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x15,
	0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x0a, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x5e, 0x0a, 0x16, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x8e, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x16, 0x53, 0x6d,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcd, 0x03,
	0x0a, 0x0b, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0b, 0x73, 0x6d, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x0a, 0x73, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x60, 0x0a,
	0x17, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x6d,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x8a, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x8a, 0x02, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbe, 0x03, 0x0a, 0x0d, 0x53, 0x6d, 0x73, 0x42, 0x69,
	0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6b, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x4f, 0x6b, 0x43, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x18, 0x53, 0x6d, 0x73, 0x42,
	0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xfb, 0x02, 0x0a, 0x19,
	0x53, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53,
	0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xfa, 0x01, 0x0a,
	0x0d, 0x53, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x64,
	0x0a, 0x10, 0x73, 0x6d, 0x73, 0x5f, 0x62, 0x69, 0x7a, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6c,
	0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x6d,
	0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x0d, 0x73, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e,
	0x64, 0x4c, 0x6f, 0x67, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x6d, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x73, 0x6d, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x73, 0x6d, 0x73, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0a, 0x73,
	0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6d, 0x73,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x73, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0xf0, 0x08, 0x0a,
	0x08, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x06, 0x49, 0x6e, 0x69,
	0x74, 0x44, 0x42, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x42, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x29, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2c, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x2c, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2c, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2a, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x2d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6d,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x2d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53,
	0x6d, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x73, 0x42,
	0x69, 0x7a, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53,
	0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x73,
	0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x4c, 0x6f, 0x67, 0x12, 0x2f, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6d, 0x73, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x6e,
	0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x1f, 0x5a, 0x1d, 0x2e, 0x2f, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x3b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_infra_notifier_notifier_proto_rawDescOnce sync.Once
	file_svc_infra_notifier_notifier_proto_rawDescData = file_svc_infra_notifier_notifier_proto_rawDesc
)

func file_svc_infra_notifier_notifier_proto_rawDescGZIP() []byte {
	file_svc_infra_notifier_notifier_proto_rawDescOnce.Do(func() {
		file_svc_infra_notifier_notifier_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_infra_notifier_notifier_proto_rawDescData)
	})
	return file_svc_infra_notifier_notifier_proto_rawDescData
}

var file_svc_infra_notifier_notifier_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_svc_infra_notifier_notifier_proto_goTypes = []interface{}{
	(*InitDBResp)(nil),                              // 0: svc.infra.notifier.InitDBResp
	(*CommonResponse)(nil),                          // 1: svc.infra.notifier.CommonResponse
	(*SmsChannelListRequest)(nil),                   // 2: svc.infra.notifier.SmsChannelListRequest
	(*SmsChannel)(nil),                              // 3: svc.infra.notifier.SmsChannel
	(*SmsChannelListResponse)(nil),                  // 4: svc.infra.notifier.SmsChannelListResponse
	(*CreatedSmsChannelRequest)(nil),                // 5: svc.infra.notifier.CreatedSmsChannelRequest
	(*UpdatedSmsChannelRequest)(nil),                // 6: svc.infra.notifier.UpdatedSmsChannelRequest
	(*DeletedSmsChannelRequest)(nil),                // 7: svc.infra.notifier.DeletedSmsChannelRequest
	(*SmsTemplateListRequest)(nil),                  // 8: svc.infra.notifier.SmsTemplateListRequest
	(*SmsTemplate)(nil),                             // 9: svc.infra.notifier.SmsTemplate
	(*SmsTemplateListResponse)(nil),                 // 10: svc.infra.notifier.SmsTemplateListResponse
	(*CreatedSmsTemplateRequest)(nil),               // 11: svc.infra.notifier.CreatedSmsTemplateRequest
	(*UpdatedSmsTemplateRequest)(nil),               // 12: svc.infra.notifier.UpdatedSmsTemplateRequest
	(*DeletedSmsTemplateRequest)(nil),               // 13: svc.infra.notifier.DeletedSmsTemplateRequest
	(*SmsBizSendLog)(nil),                           // 14: svc.infra.notifier.SmsBizSendLog
	(*SmsBizSendLogListRequest)(nil),                // 15: svc.infra.notifier.SmsBizSendLogListRequest
	(*SmsBizSendLogListResponse)(nil),               // 16: svc.infra.notifier.SmsBizSendLogListResponse
	(*CreatedSmsBizSendLogRequest)(nil),             // 17: svc.infra.notifier.CreatedSmsBizSendLogRequest
	(*SmsBizSendLogListResponse_SmsBizSendLog)(nil), // 18: svc.infra.notifier.SmsBizSendLogListResponse.SmsBizSendLog
	(*timestamppb.Timestamp)(nil),                   // 19: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                           // 20: google.protobuf.Empty
}
var file_svc_infra_notifier_notifier_proto_depIdxs = []int32{
	19, // 0: svc.infra.notifier.SmsChannelListRequest.start_time:type_name -> google.protobuf.Timestamp
	19, // 1: svc.infra.notifier.SmsChannelListRequest.end_time:type_name -> google.protobuf.Timestamp
	19, // 2: svc.infra.notifier.SmsChannel.created_at:type_name -> google.protobuf.Timestamp
	3,  // 3: svc.infra.notifier.SmsChannelListResponse.list:type_name -> svc.infra.notifier.SmsChannel
	19, // 4: svc.infra.notifier.SmsTemplateListRequest.start_time:type_name -> google.protobuf.Timestamp
	19, // 5: svc.infra.notifier.SmsTemplateListRequest.end_time:type_name -> google.protobuf.Timestamp
	3,  // 6: svc.infra.notifier.SmsTemplate.sms_channel:type_name -> svc.infra.notifier.SmsChannel
	9,  // 7: svc.infra.notifier.SmsTemplateListResponse.list:type_name -> svc.infra.notifier.SmsTemplate
	19, // 8: svc.infra.notifier.SmsBizSendLog.created_at:type_name -> google.protobuf.Timestamp
	19, // 9: svc.infra.notifier.SmsBizSendLog.updated_at:type_name -> google.protobuf.Timestamp
	19, // 10: svc.infra.notifier.SmsBizSendLogListRequest.start_time:type_name -> google.protobuf.Timestamp
	19, // 11: svc.infra.notifier.SmsBizSendLogListRequest.end_time:type_name -> google.protobuf.Timestamp
	18, // 12: svc.infra.notifier.SmsBizSendLogListResponse.list:type_name -> svc.infra.notifier.SmsBizSendLogListResponse.SmsBizSendLog
	18, // 13: svc.infra.notifier.SmsBizSendLogListResponse.SmsBizSendLog.sms_biz_send_log:type_name -> svc.infra.notifier.SmsBizSendLogListResponse.SmsBizSendLog
	9,  // 14: svc.infra.notifier.SmsBizSendLogListResponse.SmsBizSendLog.sms_template:type_name -> svc.infra.notifier.SmsTemplate
	3,  // 15: svc.infra.notifier.SmsBizSendLogListResponse.SmsBizSendLog.sms_channel:type_name -> svc.infra.notifier.SmsChannel
	20, // 16: svc.infra.notifier.Notifier.InitDB:input_type -> google.protobuf.Empty
	2,  // 17: svc.infra.notifier.Notifier.GetSmsChannelList:input_type -> svc.infra.notifier.SmsChannelListRequest
	5,  // 18: svc.infra.notifier.Notifier.CreatedSmsChannel:input_type -> svc.infra.notifier.CreatedSmsChannelRequest
	6,  // 19: svc.infra.notifier.Notifier.UpdatedSmsChannel:input_type -> svc.infra.notifier.UpdatedSmsChannelRequest
	7,  // 20: svc.infra.notifier.Notifier.DeletedSmsChannel:input_type -> svc.infra.notifier.DeletedSmsChannelRequest
	8,  // 21: svc.infra.notifier.Notifier.GetSmsTemplateList:input_type -> svc.infra.notifier.SmsTemplateListRequest
	11, // 22: svc.infra.notifier.Notifier.CreatedSmsTemplate:input_type -> svc.infra.notifier.CreatedSmsTemplateRequest
	12, // 23: svc.infra.notifier.Notifier.UpdateSmsTemplate:input_type -> svc.infra.notifier.UpdatedSmsTemplateRequest
	13, // 24: svc.infra.notifier.Notifier.DeletedSmsTemplate:input_type -> svc.infra.notifier.DeletedSmsTemplateRequest
	15, // 25: svc.infra.notifier.Notifier.GetSmsBizLogList:input_type -> svc.infra.notifier.SmsBizSendLogListRequest
	17, // 26: svc.infra.notifier.Notifier.CreatedSmsBizLog:input_type -> svc.infra.notifier.CreatedSmsBizSendLogRequest
	0,  // 27: svc.infra.notifier.Notifier.InitDB:output_type -> svc.infra.notifier.InitDBResp
	4,  // 28: svc.infra.notifier.Notifier.GetSmsChannelList:output_type -> svc.infra.notifier.SmsChannelListResponse
	1,  // 29: svc.infra.notifier.Notifier.CreatedSmsChannel:output_type -> svc.infra.notifier.CommonResponse
	1,  // 30: svc.infra.notifier.Notifier.UpdatedSmsChannel:output_type -> svc.infra.notifier.CommonResponse
	1,  // 31: svc.infra.notifier.Notifier.DeletedSmsChannel:output_type -> svc.infra.notifier.CommonResponse
	10, // 32: svc.infra.notifier.Notifier.GetSmsTemplateList:output_type -> svc.infra.notifier.SmsTemplateListResponse
	1,  // 33: svc.infra.notifier.Notifier.CreatedSmsTemplate:output_type -> svc.infra.notifier.CommonResponse
	1,  // 34: svc.infra.notifier.Notifier.UpdateSmsTemplate:output_type -> svc.infra.notifier.CommonResponse
	1,  // 35: svc.infra.notifier.Notifier.DeletedSmsTemplate:output_type -> svc.infra.notifier.CommonResponse
	16, // 36: svc.infra.notifier.Notifier.GetSmsBizLogList:output_type -> svc.infra.notifier.SmsBizSendLogListResponse
	1,  // 37: svc.infra.notifier.Notifier.CreatedSmsBizLog:output_type -> svc.infra.notifier.CommonResponse
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_svc_infra_notifier_notifier_proto_init() }
func file_svc_infra_notifier_notifier_proto_init() {
	if File_svc_infra_notifier_notifier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_infra_notifier_notifier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitDBResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsChannelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsChannelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedSmsChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedSmsChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedSmsChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsTemplateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsTemplateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedSmsTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedSmsTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedSmsTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsBizSendLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsBizSendLogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsBizSendLogListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedSmsBizSendLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_notifier_notifier_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsBizSendLogListResponse_SmsBizSendLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_svc_infra_notifier_notifier_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CommonResponse_Uuid)(nil),
		(*CommonResponse_Lid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_infra_notifier_notifier_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_infra_notifier_notifier_proto_goTypes,
		DependencyIndexes: file_svc_infra_notifier_notifier_proto_depIdxs,
		MessageInfos:      file_svc_infra_notifier_notifier_proto_msgTypes,
	}.Build()
	File_svc_infra_notifier_notifier_proto = out.File
	file_svc_infra_notifier_notifier_proto_rawDesc = nil
	file_svc_infra_notifier_notifier_proto_goTypes = nil
	file_svc_infra_notifier_notifier_proto_depIdxs = nil
}
