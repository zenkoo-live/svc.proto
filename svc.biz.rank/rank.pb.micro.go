// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: svc.biz.rank/rank.proto

package rank

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for Rank service

func NewRankEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for Rank service

type RankService interface {
	// 获取直播在线的排行榜成员
	GetLiveOnlineRankMember(ctx context.Context, in *GetLiveOnlineRankMemberReq, opts ...client.CallOption) (*GetLiveOnlineRankMemberResp, error)
}

type rankService struct {
	c    client.Client
	name string
}

func NewRankService(name string, c client.Client) RankService {
	return &rankService{
		c:    c,
		name: name,
	}
}

func (c *rankService) GetLiveOnlineRankMember(ctx context.Context, in *GetLiveOnlineRankMemberReq, opts ...client.CallOption) (*GetLiveOnlineRankMemberResp, error) {
	req := c.c.NewRequest(c.name, "Rank.GetLiveOnlineRankMember", in)
	out := new(GetLiveOnlineRankMemberResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Rank service

type RankHandler interface {
	// 获取直播在线的排行榜成员
	GetLiveOnlineRankMember(context.Context, *GetLiveOnlineRankMemberReq, *GetLiveOnlineRankMemberResp) error
}

func RegisterRankHandler(s server.Server, hdlr RankHandler, opts ...server.HandlerOption) error {
	type rank interface {
		GetLiveOnlineRankMember(ctx context.Context, in *GetLiveOnlineRankMemberReq, out *GetLiveOnlineRankMemberResp) error
	}
	type Rank struct {
		rank
	}
	h := &rankHandler{hdlr}
	return s.Handle(s.NewHandler(&Rank{h}, opts...))
}

type rankHandler struct {
	RankHandler
}

func (h *rankHandler) GetLiveOnlineRankMember(ctx context.Context, in *GetLiveOnlineRankMemberReq, out *GetLiveOnlineRankMemberResp) error {
	return h.RankHandler.GetLiveOnlineRankMember(ctx, in, out)
}
