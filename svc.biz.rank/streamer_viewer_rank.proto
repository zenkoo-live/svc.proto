syntax = "proto3";

package svc.biz.rank;

option go_package="./svc.biz.rank;rank";

// 主播观众排行
service StreamerViewerRank {
    // 获取主播某场直播的排行榜成员
    rpc GetStreamerViewerLiveMember(GetStreamerViewerLiveMemberReq) returns (GetStreamerViewerRankResp) {}
    // 获取主播某场直播的在线排行榜成员
    rpc GetStreamerViewerLiveOnlineMember(GetStreamerViewerLiveMemberReq) returns (GetStreamerViewerRankResp) {}

    // 获取给主播贡献礼物的排行榜成员
    rpc GetStreamerViewerGiftMember(GetStreamerViewerGiftMemberReq) returns (GetStreamerViewerRankResp) {}
    // 获取给主播贡献魅力值的排行榜成员
    rpc GetStreamerViewerGlamourMember(GetStreamerViewerGlamourMemberReq) returns (GetStreamerViewerRankResp) {}
}

enum StreamerViewerRankPeriod {
    StreamerViewerRankPeriodUnknown = 0; // 未知
    StreamerViewerRankPeriodDay = 1; // 日榜
    StreamerViewerRankPeriodWeek = 2; // 周榜
    StreamerViewerRankPeriodMonth = 3; // 月榜
    StreamerViewerRankPeriodAll = 4; // 总榜
}

// RankMemberInfo 排行榜成员信息
message RankMemberInfo {
    string member_id = 1; 
    int64 score = 2;
}

message GetStreamerViewerLiveMemberReq {
    int32 page = 1;
    int32 limit = 2;
    string streamer_id = 3; // 主播id
    string live_id = 4; // 直播id
}

message GetStreamerViewerGiftMemberReq {
    int32 page = 1;
    int32 limit = 2;
    StreamerViewerRankPeriod rank_period = 3; // 排行榜周期
    string streamer_id = 4; // 主播id
    string period_time = 5; // 传空则按照当前时间计算（日2006-01-02，月2006-01，周2006-1、使用"-"拼接time.ISOWeek返回值）
}

message GetStreamerViewerGlamourMemberReq {
    int32 page = 1;
    int32 limit = 2;
    StreamerViewerRankPeriod rank_period = 3; // 排行榜周期
    string streamer_id = 4; // 主播id
    string period_time = 5; // 传空则按照当前时间计算（日2006-01-02，月2006-01，周2006-1、使用"-"拼接time.ISOWeek返回值）
}

message GetStreamerViewerRankResp {
    repeated RankMemberInfo items = 1;
}