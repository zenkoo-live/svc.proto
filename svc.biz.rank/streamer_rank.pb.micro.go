// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: svc.biz.rank/streamer_rank.proto

package rank

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	client "go-micro.dev/v5/client"
	server "go-micro.dev/v5/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for StreamerRank service

type StreamerRankService interface {
	// 获取主播排行榜成员
	GetStreamerRank(ctx context.Context, in *GetStreamerRankReq, opts ...client.CallOption) (*GetStreamerRankResp, error)
}

type streamerRankService struct {
	c    client.Client
	name string
}

func NewStreamerRankService(name string, c client.Client) StreamerRankService {
	return &streamerRankService{
		c:    c,
		name: name,
	}
}

func (c *streamerRankService) GetStreamerRank(ctx context.Context, in *GetStreamerRankReq, opts ...client.CallOption) (*GetStreamerRankResp, error) {
	req := c.c.NewRequest(c.name, "StreamerRank.GetStreamerRank", in)
	out := new(GetStreamerRankResp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StreamerRank service

type StreamerRankHandler interface {
	// 获取主播排行榜成员
	GetStreamerRank(context.Context, *GetStreamerRankReq, *GetStreamerRankResp) error
}

func RegisterStreamerRankHandler(s server.Server, hdlr StreamerRankHandler, opts ...server.HandlerOption) error {
	type streamerRank interface {
		GetStreamerRank(ctx context.Context, in *GetStreamerRankReq, out *GetStreamerRankResp) error
	}
	type StreamerRank struct {
		streamerRank
	}
	h := &streamerRankHandler{hdlr}
	return s.Handle(s.NewHandler(&StreamerRank{h}, opts...))
}

type streamerRankHandler struct {
	StreamerRankHandler
}

func (h *streamerRankHandler) GetStreamerRank(ctx context.Context, in *GetStreamerRankReq, out *GetStreamerRankResp) error {
	return h.StreamerRankHandler.GetStreamerRank(ctx, in, out)
}
