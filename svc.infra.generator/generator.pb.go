// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: svc.infra.generator/generator.proto

package generator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitDBResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitDBResp) Reset() {
	*x = InitDBResp{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitDBResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitDBResp) ProtoMessage() {}

func (x *InitDBResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitDBResp.ProtoReflect.Descriptor instead.
func (*InitDBResp) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{0}
}

func (x *InitDBResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Models
type ID struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                // 内部ID
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                            // 生成器名字
	StartNumeric   int64                  `protobuf:"varint,3,opt,name=start_numeric,json=startNumeric,proto3" json:"start_numeric,omitempty"`       // 初始ID
	CurrentNumeric int64                  `protobuf:"varint,4,opt,name=current_numeric,json=currentNumeric,proto3" json:"current_numeric,omitempty"` // 当前分配到的ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ID) Reset() {
	*x = ID{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{1}
}

func (x *ID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ID) GetStartNumeric() int64 {
	if x != nil {
		return x.StartNumeric
	}
	return 0
}

func (x *ID) GetCurrentNumeric() int64 {
	if x != nil {
		return x.CurrentNumeric
	}
	return 0
}

// Parameters
type AddIDReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Generator     *ID                    `protobuf:"bytes,1,opt,name=generator,proto3" json:"generator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddIDReq) Reset() {
	*x = AddIDReq{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIDReq) ProtoMessage() {}

func (x *AddIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIDReq.ProtoReflect.Descriptor instead.
func (*AddIDReq) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{2}
}

func (x *AddIDReq) GetGenerator() *ID {
	if x != nil {
		return x.Generator
	}
	return nil
}

type AddIDResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Generator     *ID                    `protobuf:"bytes,1,opt,name=generator,proto3" json:"generator,omitempty"`
	Result        bool                   `protobuf:"varint,255,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddIDResp) Reset() {
	*x = AddIDResp{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIDResp) ProtoMessage() {}

func (x *AddIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIDResp.ProtoReflect.Descriptor instead.
func (*AddIDResp) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{3}
}

func (x *AddIDResp) GetGenerator() *ID {
	if x != nil {
		return x.Generator
	}
	return nil
}

func (x *AddIDResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type OrdianIDReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Generator     string                 `protobuf:"bytes,1,opt,name=generator,proto3" json:"generator,omitempty"`
	Id            int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrdianIDReq) Reset() {
	*x = OrdianIDReq{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrdianIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdianIDReq) ProtoMessage() {}

func (x *OrdianIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdianIDReq.ProtoReflect.Descriptor instead.
func (*OrdianIDReq) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{4}
}

func (x *OrdianIDReq) GetGenerator() string {
	if x != nil {
		return x.Generator
	}
	return ""
}

func (x *OrdianIDReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OrdianIDResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrdianIDResp) Reset() {
	*x = OrdianIDResp{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrdianIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdianIDResp) ProtoMessage() {}

func (x *OrdianIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdianIDResp.ProtoReflect.Descriptor instead.
func (*OrdianIDResp) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{5}
}

func (x *OrdianIDResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type NextIDReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Generator     string                 `protobuf:"bytes,1,opt,name=generator,proto3" json:"generator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextIDReq) Reset() {
	*x = NextIDReq{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextIDReq) ProtoMessage() {}

func (x *NextIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextIDReq.ProtoReflect.Descriptor instead.
func (*NextIDReq) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{6}
}

func (x *NextIDReq) GetGenerator() string {
	if x != nil {
		return x.Generator
	}
	return ""
}

type NextIDResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextIDResp) Reset() {
	*x = NextIDResp{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextIDResp) ProtoMessage() {}

func (x *NextIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextIDResp.ProtoReflect.Descriptor instead.
func (*NextIDResp) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{7}
}

func (x *NextIDResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IsPrettyIDReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsPrettyIDReq) Reset() {
	*x = IsPrettyIDReq{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsPrettyIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPrettyIDReq) ProtoMessage() {}

func (x *IsPrettyIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPrettyIDReq.ProtoReflect.Descriptor instead.
func (*IsPrettyIDReq) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{8}
}

func (x *IsPrettyIDReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IsPrettyIDResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsPrettyIDResp) Reset() {
	*x = IsPrettyIDResp{}
	mi := &file_svc_infra_generator_generator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsPrettyIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPrettyIDResp) ProtoMessage() {}

func (x *IsPrettyIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_generator_generator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPrettyIDResp.ProtoReflect.Descriptor instead.
func (*IsPrettyIDResp) Descriptor() ([]byte, []int) {
	return file_svc_infra_generator_generator_proto_rawDescGZIP(), []int{9}
}

func (x *IsPrettyIDResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_svc_infra_generator_generator_proto protoreflect.FileDescriptor

var file_svc_infra_generator_generator_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x44,
	0x42, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x76, 0x0a,
	0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x65, 0x72, 0x69, 0x63, 0x22, 0x41, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x12, 0x35, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x44, 0x52, 0x09, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x5b, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49,
	0x44, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x26, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x69, 0x61, 0x6e, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x29, 0x0a, 0x09, 0x4e, 0x65,
	0x78, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x1c, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0d, 0x49, 0x73, 0x50, 0x72, 0x65, 0x74, 0x74, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x49, 0x73, 0x50, 0x72, 0x65, 0x74, 0x74, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x89,
	0x03, 0x0a, 0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x06,
	0x49, 0x6e, 0x69, 0x74, 0x44, 0x42, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x42, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x46, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41,
	0x64, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x69, 0x61,
	0x6e, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x69, 0x61, 0x6e,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x69,
	0x61, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x06, 0x4e, 0x65, 0x78, 0x74,
	0x49, 0x44, 0x12, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0a, 0x49, 0x73, 0x50, 0x72, 0x65, 0x74, 0x74, 0x79, 0x49,
	0x44, 0x12, 0x22, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x73, 0x50, 0x72, 0x65, 0x74, 0x74, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x73, 0x50, 0x72,
	0x65, 0x74, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x42, 0x21, 0x5a, 0x1f, 0x2e, 0x2f,
	0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x3b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_infra_generator_generator_proto_rawDescOnce sync.Once
	file_svc_infra_generator_generator_proto_rawDescData = file_svc_infra_generator_generator_proto_rawDesc
)

func file_svc_infra_generator_generator_proto_rawDescGZIP() []byte {
	file_svc_infra_generator_generator_proto_rawDescOnce.Do(func() {
		file_svc_infra_generator_generator_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_infra_generator_generator_proto_rawDescData)
	})
	return file_svc_infra_generator_generator_proto_rawDescData
}

var file_svc_infra_generator_generator_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_svc_infra_generator_generator_proto_goTypes = []any{
	(*InitDBResp)(nil),     // 0: svc.infra.generator.InitDBResp
	(*ID)(nil),             // 1: svc.infra.generator.ID
	(*AddIDReq)(nil),       // 2: svc.infra.generator.AddIDReq
	(*AddIDResp)(nil),      // 3: svc.infra.generator.AddIDResp
	(*OrdianIDReq)(nil),    // 4: svc.infra.generator.OrdianIDReq
	(*OrdianIDResp)(nil),   // 5: svc.infra.generator.OrdianIDResp
	(*NextIDReq)(nil),      // 6: svc.infra.generator.NextIDReq
	(*NextIDResp)(nil),     // 7: svc.infra.generator.NextIDResp
	(*IsPrettyIDReq)(nil),  // 8: svc.infra.generator.IsPrettyIDReq
	(*IsPrettyIDResp)(nil), // 9: svc.infra.generator.IsPrettyIDResp
	(*emptypb.Empty)(nil),  // 10: google.protobuf.Empty
}
var file_svc_infra_generator_generator_proto_depIdxs = []int32{
	1,  // 0: svc.infra.generator.AddIDReq.generator:type_name -> svc.infra.generator.ID
	1,  // 1: svc.infra.generator.AddIDResp.generator:type_name -> svc.infra.generator.ID
	10, // 2: svc.infra.generator.Generator.InitDB:input_type -> google.protobuf.Empty
	2,  // 3: svc.infra.generator.Generator.AddID:input_type -> svc.infra.generator.AddIDReq
	4,  // 4: svc.infra.generator.Generator.OrdianID:input_type -> svc.infra.generator.OrdianIDReq
	6,  // 5: svc.infra.generator.Generator.NextID:input_type -> svc.infra.generator.NextIDReq
	8,  // 6: svc.infra.generator.Generator.IsPrettyID:input_type -> svc.infra.generator.IsPrettyIDReq
	0,  // 7: svc.infra.generator.Generator.InitDB:output_type -> svc.infra.generator.InitDBResp
	3,  // 8: svc.infra.generator.Generator.AddID:output_type -> svc.infra.generator.AddIDResp
	5,  // 9: svc.infra.generator.Generator.OrdianID:output_type -> svc.infra.generator.OrdianIDResp
	7,  // 10: svc.infra.generator.Generator.NextID:output_type -> svc.infra.generator.NextIDResp
	9,  // 11: svc.infra.generator.Generator.IsPrettyID:output_type -> svc.infra.generator.IsPrettyIDResp
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_svc_infra_generator_generator_proto_init() }
func file_svc_infra_generator_generator_proto_init() {
	if File_svc_infra_generator_generator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_infra_generator_generator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_infra_generator_generator_proto_goTypes,
		DependencyIndexes: file_svc_infra_generator_generator_proto_depIdxs,
		MessageInfos:      file_svc_infra_generator_generator_proto_msgTypes,
	}.Build()
	File_svc_infra_generator_generator_proto = out.File
	file_svc_infra_generator_generator_proto_rawDesc = nil
	file_svc_infra_generator_generator_proto_goTypes = nil
	file_svc_infra_generator_generator_proto_depIdxs = nil
}
