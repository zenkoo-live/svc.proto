syntax = "proto3";

package svc.biz.vip;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "svc.biz.vip/fanbase.proto";

option go_package="./svc.biz.vip;vip";

enum FanbaseLevel {
    FanbaseLevelUnknown = 0; // 未知
    FanbaseLevelPrimary = 1; // 初级
    FanbaseLevelSuper = 2; // 超级
    FanbaseLevelExtreme = 3; // 至尊
}

// 粉丝团
service FanbaseMember {
    // JoinFanbase 加入粉丝团
    rpc JoinFanbase (JoinFanbaseReq) returns (google.protobuf.Empty) {}
    // LeaveFanbase 离开粉丝团
    rpc LeaveFanbase (LeaveFanbaseReq) returns (google.protobuf.Empty) {}
    // GetFanbaseMember 获取粉丝团成员信息
    rpc GetFanbaseMember (GetFanbaseMemberReq) returns (GetFanbaseMemberResp) {}

    // GetFanbaseMemberByStreamerID 获取主播粉丝团成员列表
    rpc GetFanbaseMemberByStreamerID (GetFanbaseMemberByStreamerIDReq) returns (GetFanbaseMemberByStreamerIDResp) {}
    // CountFanbaseMemberByStreamerID 获取主播粉丝团成员总数
    rpc CountFanbaseMemberByStreamerID (CountFanbaseMemberByStreamerIDReq) returns (CountFanbaseMemberByStreamerIDResp) {}
    // GetOnlineFanbaseMemberByStreamerID 获取主播粉丝团在线成员列表
    rpc GetOnlineFanbaseMemberByStreamerID (GetOnlineFanbaseMemberByStreamerIDReq) returns (GetOnlineFanbaseMemberByStreamerIDResp) {}

    // GetFanbaseMembertByMemberID 获取用户加入的粉丝团列表
    rpc GetFanbaseMembertByMemberID (GetFanbaseMembertByMemberIDReq) returns (GetFanbaseMembertByMemberIDResp) {}
    // CountFanbaseMembertByMemberID 获取用户加入的粉丝团数量
    rpc CountFanbaseMembertByMemberID (CountFanbaseMembertByMemberIDReq) returns (CountFanbaseMembertByMemberIDResp) {}
}

message JoinFanbaseReq {
    string streamer_id = 1;
    string member_id = 2;
    FanbaseLevel level = 3;
}

message LeaveFanbaseReq {
    string streamer_id = 1;
    string member_id = 2;
}

message GetFanbaseMemberReq {
    string streamer_id = 1;
    string member_id = 2;
    bool with_fanbase_info = 3; // 是否返回粉丝团信息
}
message GetFanbaseMemberResp {
    FanbaseMemberInfo fanbase_member = 1;
}

message FanbaseRights {
    bool rights_icon = 1; // 专属勋章
    bool rights_gift = 2; // 专属礼物
    bool rights_inroom_effect = 3; // 进场特效
    bool rights_avoid_kick = 4; // 防踢
    bool rights_avoid_ban_speaking = 5; // 防禁言
}
message FanbaseMemberInfo {
    string fanbase_id = 1;
    string streamer_id = 2;
    string member_id = 3;
    FanbaseLevel level = 4;
    google.protobuf.Timestamp join_time = 5; // 加入时间
    int32 score = 6;

    FanbaseInfo fanbase = 100; // 粉丝团详情，仅在请求时传递了with_fanbase_info时返回
    FanbaseRights rights = 101;

    google.protobuf.Timestamp created_at = 201; // 创建时间
    google.protobuf.Timestamp updated_at = 202; // 更新时间
}

message GetFanbaseMemberByStreamerIDReq {
    int32 page = 1; // 页数
    int32 limit = 2; // 条数
    bool with_fanbase_info = 3; // 是否返回粉丝团信息
    string streamer_id = 4; // 主播id
    FanbaseLevel level = 5; // 等级
}
message GetFanbaseMemberByStreamerIDResp {
    repeated FanbaseMemberInfo items = 1;
} 

message CountFanbaseMemberByStreamerIDReq {
    string streamer_id = 1; // 主播id
    FanbaseLevel level = 2; // 等级
    google.protobuf.Timestamp start_time = 3; // 开始时间
    google.protobuf.Timestamp end_time = 4; // 结束时间
}
message CountFanbaseMemberByStreamerIDResp {
    int64 total = 1; // 总数
}

message GetOnlineFanbaseMemberByStreamerIDReq {
    int32 page = 1; // 页数
    int32 limit = 2; // 条数
    bool with_fanbase_info = 3; // 是否返回粉丝团信息
    string streamer_id = 4; // 主播id
}
message GetOnlineFanbaseMemberByStreamerIDResp {
    repeated FanbaseMemberInfo items = 1;
}

message GetFanbaseMembertByMemberIDReq {
    int32 page = 1; // 页数
    int32 limit = 2; // 条数
    bool with_fanbase_info = 3; // 是否返回粉丝团信息
    string member_id = 4; // 成员id
}
message GetFanbaseMembertByMemberIDResp {
    repeated FanbaseMemberInfo items = 1;
}

message CountFanbaseMembertByMemberIDReq {
    string member_id = 1;
}
message CountFanbaseMembertByMemberIDResp {
    int64 total = 1; // 总数
}