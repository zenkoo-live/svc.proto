syntax = "proto3";

package svc.biz.account;
option go_package="./svc.biz.account;account";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service Account {
    rpc InitDB(google.protobuf.Empty) returns (InitDBResp); // 初始化数据库

    rpc GetViewer(GetViewerReq) returns (GetViewerResp); // 获取普通账号
    rpc ListViewers(ListViewersReq) returns (ListViewersResp); // 获取普通账号列表
    rpc AddViewer(AddViewerReq) returns (AddViewerResp); // 添加普通账号
    rpc UpdateViewer(UpdateViewerReq) returns (UpdateViewerResp); // 更新普通账号
    rpc DeleteViewer(DeleteViewerReq) returns (DeleteViewerResp); // 删除普通账号

    rpc GetStreamer(GetStreamerReq) returns (GetStreamerResp); // 获取主播账号
    rpc ListStreamers(ListStreamersReq) returns (ListStreamersResp); // 获取主播账号列表
    rpc AddStreamer(AddStreamerReq) returns (AddStreamerResp); // 添加普通账号
    rpc UpdateStreamer(UpdateStreamerReq) returns (UpdateStreamerResp); // 更新主播账号
    rpc DeleteStreamer(DeleteStreamerReq) returns (DeleteStreamerResp); // 删除主播账号

    rpc GetManager(GetManagerReq) returns (GetManagerResp); // 获取主播账号
    rpc ListManagers(ListManagersReq) returns (ListManagersResp); // 获取主播账号列表
    rpc AddManager(AddManagerReq) returns (AddManagerResp); // 添加普通账号
    rpc UpdateManager(UpdateManagerReq) returns (UpdateManagerResp); // 更新主播账号
    rpc DeleteManager(DeleteManagerReq) returns (DeleteManagerResp); // 删除主播账号
}

message InitDBResp {
    bool result = 1;
}

enum ManagerTypes {
    ManagerTypeUnknown = 0; // 未知
    ManagerTypePlatform = 1; // 平台管理者
    ManagerTypeMerchant = 2; // 商户管理者
    ManagerTypeUnion = 3; // 工会
}

// Models
message Viewer {
    string id = 1; // 内部ID
    string display_id = 2; // 用于显示和索引的数字ID
    string name = 3; // 用户名
    string nickname = 4; // 昵称
    string mobile = 11; // 手机
    string email = 12; // 邮箱
    string device_ident = 13; // 设备号 / 指纹
    optional string password = 21; // 密码
    google.protobuf.Timestamp created_at = 255; // 创建时间
};
message Streamer {
    string id = 1; // 内部ID
    string display_id = 2; // 用于显示和索引的数字ID
    string name = 3; // 用户名
    string mobile = 11; // 手机
    string email = 12; // 邮箱
    optional string password = 21; // 密码
    google.protobuf.Timestamp created_at = 255; // 创建时间
};
message Manager {
    string id = 1; // 内部ID
    ManagerTypes type = 2; // 类型：平台 / 商户 / 工会
    string name = 3; // 用户名
    string mobile = 11; // 手机
    string email = 12; // 邮箱
    optional string password = 21; // 密码
    google.protobuf.Timestamp created_at = 255; // 创建时间
};

// Parameters
/* {{{ [Viewer] */
message GetViewerReq {
    Viewer condition = 1;
};
message GetViewerResp {
    Viewer viewer = 1;
};

message ListViewersReq {
    Viewer condition = 1;
};
message ListViewersResp {
    repeated Viewer viewers = 1;
    int64 total = 255;
};

message AddViewerReq {
    Viewer viewer = 1;
};
message AddViewerResp {
    Viewer viewer = 1;
    bool result = 255;
};

message UpdateViewerReq {
    Viewer condition = 1;
};
message UpdateViewerResp {
    int64 updated = 1;
};

message DeleteViewerReq {
    Viewer condition = 1;
};
message DeleteViewerResp {
    int64 deleted = 1;
};

/* }}} */

/* {{{ [Streamer] */
message GetStreamerReq {
    Streamer condition = 1;
};
message GetStreamerResp {
    Streamer streamer = 1;
};

message ListStreamersReq {
    Streamer condition = 1;
};
message ListStreamersResp {
    repeated Streamer streamers = 1;
    int64 total = 255;
};

message AddStreamerReq {
    Streamer streamer = 1;
};
message AddStreamerResp {
    Streamer streamer = 1;
    bool result = 255;
};

message UpdateStreamerReq {
    Streamer condition = 1;
};
message UpdateStreamerResp {
    int64 updated = 1;
};

message DeleteStreamerReq {
    Streamer condition = 1;
};
message DeleteStreamerResp {
    int64 deleted = 1;
};

/* }}} */

/* {{{ [Manager] */
message GetManagerReq {
    Manager condition = 1;
};
message GetManagerResp {
    Manager manager = 1;
};

message ListManagersReq {
    Manager condition = 1;
};
message ListManagersResp {
    repeated Manager managers = 1;
    int64 total = 255;
};

message AddManagerReq {
    Manager manager = 1;
};
message AddManagerResp {
    Manager manager = 1;
    bool result = 255;
};

message UpdateManagerReq {
    Manager condition = 1;
};
message UpdateManagerResp {
    int64 updated = 1;
};

message DeleteManagerReq {
    Manager condition = 1;
};
message DeleteManagerResp {
    int64 deleted = 1;
};

/* }}} */
