// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: svc.infra.setting/setting.proto

package setting

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarqueeType int32

const (
	MarqueeType_MarqueeTypeHome           MarqueeType = 0 //首页
	MarqueeType_MarqueeTypeAmusement      MarqueeType = 1 //娱乐页
	MarqueeType_MarqueeTypeLive           MarqueeType = 2 //直播间
	MarqueeType_MarqueeTypePersonalCenter MarqueeType = 3 //个人中心
	MarqueeType_MarqueeTypePay            MarqueeType = 4 //充值
)

// Enum value maps for MarqueeType.
var (
	MarqueeType_name = map[int32]string{
		0: "MarqueeTypeHome",
		1: "MarqueeTypeAmusement",
		2: "MarqueeTypeLive",
		3: "MarqueeTypePersonalCenter",
		4: "MarqueeTypePay",
	}
	MarqueeType_value = map[string]int32{
		"MarqueeTypeHome":           0,
		"MarqueeTypeAmusement":      1,
		"MarqueeTypeLive":           2,
		"MarqueeTypePersonalCenter": 3,
		"MarqueeTypePay":            4,
	}
)

func (x MarqueeType) Enum() *MarqueeType {
	p := new(MarqueeType)
	*p = x
	return p
}

func (x MarqueeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarqueeType) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_setting_setting_proto_enumTypes[0].Descriptor()
}

func (MarqueeType) Type() protoreflect.EnumType {
	return &file_svc_infra_setting_setting_proto_enumTypes[0]
}

func (x MarqueeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarqueeType.Descriptor instead.
func (MarqueeType) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_setting_setting_proto_rawDescGZIP(), []int{0}
}

type MarqueeStatus int32

const (
	MarqueeStatus_MarqueeStatusInvaild MarqueeStatus = 0 //已失效
	MarqueeStatus_MarqueeStatusShow    MarqueeStatus = 1 //进行中
)

// Enum value maps for MarqueeStatus.
var (
	MarqueeStatus_name = map[int32]string{
		0: "MarqueeStatusInvaild",
		1: "MarqueeStatusShow",
	}
	MarqueeStatus_value = map[string]int32{
		"MarqueeStatusInvaild": 0,
		"MarqueeStatusShow":    1,
	}
)

func (x MarqueeStatus) Enum() *MarqueeStatus {
	p := new(MarqueeStatus)
	*p = x
	return p
}

func (x MarqueeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarqueeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_svc_infra_setting_setting_proto_enumTypes[1].Descriptor()
}

func (MarqueeStatus) Type() protoreflect.EnumType {
	return &file_svc_infra_setting_setting_proto_enumTypes[1]
}

func (x MarqueeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarqueeStatus.Descriptor instead.
func (MarqueeStatus) EnumDescriptor() ([]byte, []int) {
	return file_svc_infra_setting_setting_proto_rawDescGZIP(), []int{1}
}

type SettingGreetingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SettingGreetingReq) Reset() {
	*x = SettingGreetingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_setting_setting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingGreetingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingGreetingReq) ProtoMessage() {}

func (x *SettingGreetingReq) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_setting_setting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingGreetingReq.ProtoReflect.Descriptor instead.
func (*SettingGreetingReq) Descriptor() ([]byte, []int) {
	return file_svc_infra_setting_setting_proto_rawDescGZIP(), []int{0}
}

func (x *SettingGreetingReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SettingGreetingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SettingGreetingResp) Reset() {
	*x = SettingGreetingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_setting_setting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingGreetingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingGreetingResp) ProtoMessage() {}

func (x *SettingGreetingResp) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_setting_setting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingGreetingResp.ProtoReflect.Descriptor instead.
func (*SettingGreetingResp) Descriptor() ([]byte, []int) {
	return file_svc_infra_setting_setting_proto_rawDescGZIP(), []int{1}
}

func (x *SettingGreetingResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MarqueeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarqueeId  int64                  `protobuf:"varint,1,opt,name=marquee_id,json=marqueeId,proto3" json:"marquee_id,omitempty"`               // 跑马灯id
	Type       MarqueeType            `protobuf:"varint,2,opt,name=type,proto3,enum=svc.infra.setting.MarqueeType" json:"type,omitempty"`       //跑马灯类型
	Content    string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                                     // 跑马灯内容
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                // 开始时间
	EndTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                      // 结束时间
	Status     MarqueeStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=svc.infra.setting.MarqueeStatus" json:"status,omitempty"` //状态
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`             // 创建时间
	AdminId    int32                  `protobuf:"varint,8,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`                     //操作账号
}

func (x *MarqueeInfo) Reset() {
	*x = MarqueeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_infra_setting_setting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarqueeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarqueeInfo) ProtoMessage() {}

func (x *MarqueeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_svc_infra_setting_setting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarqueeInfo.ProtoReflect.Descriptor instead.
func (*MarqueeInfo) Descriptor() ([]byte, []int) {
	return file_svc_infra_setting_setting_proto_rawDescGZIP(), []int{2}
}

func (x *MarqueeInfo) GetMarqueeId() int64 {
	if x != nil {
		return x.MarqueeId
	}
	return 0
}

func (x *MarqueeInfo) GetType() MarqueeType {
	if x != nil {
		return x.Type
	}
	return MarqueeType_MarqueeTypeHome
}

func (x *MarqueeInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MarqueeInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *MarqueeInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *MarqueeInfo) GetStatus() MarqueeStatus {
	if x != nil {
		return x.Status
	}
	return MarqueeStatus_MarqueeStatusInvaild
}

func (x *MarqueeInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *MarqueeInfo) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

var File_svc_infra_setting_setting_proto protoreflect.FileDescriptor

var file_svc_infra_setting_setting_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x29, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x0b, 0x4d,
	0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x72, 0x71, 0x75, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x71,
	0x75, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61,
	0x72, 0x71, 0x75, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x2a, 0x84, 0x01, 0x0a, 0x0b,
	0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4d,
	0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x6d, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x61,
	0x72, 0x71, 0x75, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x79,
	0x10, 0x04, 0x2a, 0x40, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x69, 0x6c, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68,
	0x6f, 0x77, 0x10, 0x01, 0x32, 0x66, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x5b, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x1d, 0x5a, 0x1b,
	0x2e, 0x2f, 0x73, 0x76, 0x63, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x3b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_svc_infra_setting_setting_proto_rawDescOnce sync.Once
	file_svc_infra_setting_setting_proto_rawDescData = file_svc_infra_setting_setting_proto_rawDesc
)

func file_svc_infra_setting_setting_proto_rawDescGZIP() []byte {
	file_svc_infra_setting_setting_proto_rawDescOnce.Do(func() {
		file_svc_infra_setting_setting_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_infra_setting_setting_proto_rawDescData)
	})
	return file_svc_infra_setting_setting_proto_rawDescData
}

var file_svc_infra_setting_setting_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_svc_infra_setting_setting_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_svc_infra_setting_setting_proto_goTypes = []interface{}{
	(MarqueeType)(0),              // 0: svc.infra.setting.MarqueeType
	(MarqueeStatus)(0),            // 1: svc.infra.setting.MarqueeStatus
	(*SettingGreetingReq)(nil),    // 2: svc.infra.setting.SettingGreetingReq
	(*SettingGreetingResp)(nil),   // 3: svc.infra.setting.SettingGreetingResp
	(*MarqueeInfo)(nil),           // 4: svc.infra.setting.MarqueeInfo
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_svc_infra_setting_setting_proto_depIdxs = []int32{
	0, // 0: svc.infra.setting.MarqueeInfo.type:type_name -> svc.infra.setting.MarqueeType
	5, // 1: svc.infra.setting.MarqueeInfo.start_time:type_name -> google.protobuf.Timestamp
	5, // 2: svc.infra.setting.MarqueeInfo.end_time:type_name -> google.protobuf.Timestamp
	1, // 3: svc.infra.setting.MarqueeInfo.status:type_name -> svc.infra.setting.MarqueeStatus
	5, // 4: svc.infra.setting.MarqueeInfo.create_time:type_name -> google.protobuf.Timestamp
	2, // 5: svc.infra.setting.Setting.Greeting:input_type -> svc.infra.setting.SettingGreetingReq
	3, // 6: svc.infra.setting.Setting.Greeting:output_type -> svc.infra.setting.SettingGreetingResp
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_svc_infra_setting_setting_proto_init() }
func file_svc_infra_setting_setting_proto_init() {
	if File_svc_infra_setting_setting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_infra_setting_setting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingGreetingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_setting_setting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingGreetingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_infra_setting_setting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarqueeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_infra_setting_setting_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_infra_setting_setting_proto_goTypes,
		DependencyIndexes: file_svc_infra_setting_setting_proto_depIdxs,
		EnumInfos:         file_svc_infra_setting_setting_proto_enumTypes,
		MessageInfos:      file_svc_infra_setting_setting_proto_msgTypes,
	}.Build()
	File_svc_infra_setting_setting_proto = out.File
	file_svc_infra_setting_setting_proto_rawDesc = nil
	file_svc_infra_setting_setting_proto_goTypes = nil
	file_svc_infra_setting_setting_proto_depIdxs = nil
}
